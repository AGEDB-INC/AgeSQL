#line 1 "‘cypher.c’"

#line 3 "‘cypher.c’"

#define  YY_INT_ALIGNED short int

/* A lexical scanner generated by flex */

#define FLEX_SCANNER
#define YY_FLEX_MAJOR_VERSION 2
#define YY_FLEX_MINOR_VERSION 6
#define YY_FLEX_SUBMINOR_VERSION 4
#if YY_FLEX_SUBMINOR_VERSION > 0
#define FLEX_BETA
#endif

/* First, we deal with  platform-specific or compiler-specific issues. */

/* begin standard C headers. */
#include <stdio.h>
#include <string.h>
#include <errno.h>
#include <stdlib.h>

/* end standard C headers. */

/* flex integer type definitions */

#ifndef FLEXINT_H
#define FLEXINT_H

/* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */

#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L

/* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
 * if you want the limit (max/min) macros for int types. 
 */
#ifndef __STDC_LIMIT_MACROS
#define __STDC_LIMIT_MACROS 1
#endif

#include <inttypes.h>
typedef int8_t flex_int8_t;
typedef uint8_t flex_uint8_t;
typedef int16_t flex_int16_t;
typedef uint16_t flex_uint16_t;
typedef int32_t flex_int32_t;
typedef uint32_t flex_uint32_t;
typedef uint64_t flex_uint64_t;
#else
typedef signed char flex_int8_t;
typedef short int flex_int16_t;
typedef int flex_int32_t;
typedef unsigned char flex_uint8_t; 
typedef unsigned short int flex_uint16_t;
typedef unsigned int flex_uint32_t;

/* Limits of integral types. */
#ifndef INT8_MIN
#define INT8_MIN               (-128)
#endif
#ifndef INT16_MIN
#define INT16_MIN              (-32767-1)
#endif
#ifndef INT32_MIN
#define INT32_MIN              (-2147483647-1)
#endif
#ifndef INT8_MAX
#define INT8_MAX               (127)
#endif
#ifndef INT16_MAX
#define INT16_MAX              (32767)
#endif
#ifndef INT32_MAX
#define INT32_MAX              (2147483647)
#endif
#ifndef UINT8_MAX
#define UINT8_MAX              (255U)
#endif
#ifndef UINT16_MAX
#define UINT16_MAX             (65535U)
#endif
#ifndef UINT32_MAX
#define UINT32_MAX             (4294967295U)
#endif

#ifndef SIZE_MAX
#define SIZE_MAX               (~(size_t)0)
#endif

#endif /* ! C99 */

#endif /* ! FLEXINT_H */

/* begin standard C++ headers. */

/* TODO: this is always defined, so inline it */
#define yyconst const

#if defined(__GNUC__) && __GNUC__ >= 3
#define yynoreturn __attribute__((__noreturn__))
#else
#define yynoreturn
#endif

/* Returned upon end-of-file. */
#define YY_NULL 0

/* Promotes a possibly negative, possibly signed char to an
 *   integer in range [0..255] for use as an array index.
 */
#define YY_SC_TO_UI(c) ((YY_CHAR) (c))

/* Enter a start condition.  This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */
#define BEGIN (yy_start) = 1 + 2 *
/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state.  The YYSTATE alias is for lex
 * compatibility.
 */
#define YY_START (((yy_start) - 1) / 2)
#define YYSTATE YY_START
/* Action number for EOF rule of a given start state. */
#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)
/* Special action meaning "start processing a new file". */
#define YY_NEW_FILE yyrestart( yyin  )
#define YY_END_OF_BUFFER_CHAR 0

/* Size of default input buffer. */
#ifndef YY_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k.
 * Moreover, YY_BUF_SIZE is 2*YY_READ_BUF_SIZE in the general case.
 * Ditto for the __ia64__ case accordingly.
 */
#define YY_BUF_SIZE 32768
#else
#define YY_BUF_SIZE 16384
#endif /* __ia64__ */
#endif

/* The state buf must be large enough to hold one state per character in the main buffer.
 */
#define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))

#ifndef YY_TYPEDEF_YY_BUFFER_STATE
#define YY_TYPEDEF_YY_BUFFER_STATE
typedef struct yy_buffer_state *YY_BUFFER_STATE;
#endif

#ifndef YY_TYPEDEF_YY_SIZE_T
#define YY_TYPEDEF_YY_SIZE_T
typedef size_t yy_size_t;
#endif

extern yy_size_t yyleng;

extern FILE *yyin, *yyout;

#define EOB_ACT_CONTINUE_SCAN 0
#define EOB_ACT_END_OF_FILE 1
#define EOB_ACT_LAST_MATCH 2
    
    #define YY_LESS_LINENO(n)
    #define YY_LINENO_REWIND_TO(ptr)
    
/* Return all but the first "n" matched characters back to the input stream. */
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		*yy_cp = (yy_hold_char); \
		YY_RESTORE_YY_MORE_OFFSET \
		(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
		} \
	while ( 0 )
#define unput(c) yyunput( c, (yytext_ptr)  )

#ifndef YY_STRUCT_YY_BUFFER_STATE
#define YY_STRUCT_YY_BUFFER_STATE
struct yy_buffer_state
	{
	FILE *yy_input_file;

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	int yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	yy_size_t yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yy_at_bol;

    int yy_bs_lineno; /**< The line count. */
    int yy_bs_column; /**< The column count. */

	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;

#define YY_BUFFER_NEW 0
#define YY_BUFFER_NORMAL 1
	/* When an EOF's been seen but there's still some text to process
	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
	 * shouldn't try reading from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the EOF, we change the status to "new"
	 * (via yyrestart()), so that the user can continue scanning by
	 * just pointing yyin at a new input file.
	 */
#define YY_BUFFER_EOF_PENDING 2

	};
#endif /* !YY_STRUCT_YY_BUFFER_STATE */

/* Stack of input buffers. */
static size_t yy_buffer_stack_top = 0; /**< index of top of stack. */
static size_t yy_buffer_stack_max = 0; /**< capacity of stack. */
static YY_BUFFER_STATE * yy_buffer_stack = NULL; /**< Stack as an array. */

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 *
 * Returns the top of the stack, or NULL.
 */
#define YY_CURRENT_BUFFER ( (yy_buffer_stack) \
                          ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
                          : NULL)
/* Same as previous macro, but useful when we know that the buffer stack is not
 * NULL or when we need an lvalue. For internal use only.
 */
#define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]

/* yy_hold_char holds the character lost when yytext is formed. */
static char yy_hold_char;
static yy_size_t yy_n_chars;		/* number of characters read into yy_ch_buf */
yy_size_t yyleng;

/* Points to current character in buffer. */
static char *yy_c_buf_p = NULL;
static int yy_init = 0;		/* whether we need to initialize */
static int yy_start = 0;	/* start state number */

/* Flag which is used to allow yywrap()'s to do buffer switches
 * instead of setting up a fresh yyin.  A bit of a hack ...
 */
static int yy_did_buffer_switch_on_eof;

void yyrestart ( FILE *input_file  );
void yy_switch_to_buffer ( YY_BUFFER_STATE new_buffer  );
YY_BUFFER_STATE yy_create_buffer ( FILE *file, int size  );
void yy_delete_buffer ( YY_BUFFER_STATE b  );
void yy_flush_buffer ( YY_BUFFER_STATE b  );
void yypush_buffer_state ( YY_BUFFER_STATE new_buffer  );
void yypop_buffer_state ( void );

static void yyensure_buffer_stack ( void );
static void yy_load_buffer_state ( void );
static void yy_init_buffer ( YY_BUFFER_STATE b, FILE *file  );
#define YY_FLUSH_BUFFER yy_flush_buffer( YY_CURRENT_BUFFER )

YY_BUFFER_STATE yy_scan_buffer ( char *base, yy_size_t size  );
YY_BUFFER_STATE yy_scan_string ( const char *yy_str  );
YY_BUFFER_STATE yy_scan_bytes ( const char *bytes, yy_size_t len  );

void *yyalloc ( yy_size_t  );
void *yyrealloc ( void *, yy_size_t  );
void yyfree ( void *  );

#define yy_new_buffer yy_create_buffer
#define yy_set_interactive(is_interactive) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){ \
        yyensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer( yyin, YY_BUF_SIZE ); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
	}
#define yy_set_bol(at_bol) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){\
        yyensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer( yyin, YY_BUF_SIZE ); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
	}
#define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)

/* Begin user sect3 */

#define yywrap() (/*CONSTCOND*/1)
#define YY_SKIP_YYWRAP
typedef flex_uint8_t YY_CHAR;

FILE *yyin = NULL, *yyout = NULL;

typedef int yy_state_type;

extern int yylineno;
int yylineno = 1;

extern char *yytext;
#ifdef yytext_ptr
#undef yytext_ptr
#endif
#define yytext_ptr yytext

static const flex_int16_t yy_nxt[][75] =
    {
    {
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0
    },

    {
        3,    4,    5,    6,    7,    8,    9,   10,   11,   12,
       13,   14,   15,   16,   17,   18,   19,   20,   21,   22,

       23,   24,   25,   26,   27,   28,   29,   30,   31,   32,
       33,   32,   32,   34,   35,   36,   37,   32,   38,   39,
       40,   41,   42,   43,   44,   32,   45,   46,    4,   47,
       48,   49,   50,   51,   52,   53,   32,   54,   32,   55,
       56,   57,   58,   32,   59,   60,   61,   62,   63,   64,
       65,   32,   66,   67,   68
    },

    {
        3,    4,    5,    6,    7,    8,    9,   10,   11,   12,
       13,   14,   15,   16,   17,   18,   19,   20,   21,   22,
       23,   24,   25,   26,   27,   28,   29,   30,   31,   32,
       33,   32,   32,   34,   35,   36,   37,   32,   38,   39,

       40,   41,   42,   43,   44,   32,   45,   46,    4,   47,
       48,   49,   50,   51,   52,   53,   32,   54,   32,   55,
       56,   57,   58,   32,   59,   60,   61,   62,   63,   64,
       65,   32,   66,   67,   68
    },

    {
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,

       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3
    },

    {
        3,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,
       -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,
       -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,
       -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,
       -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,
       -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,
       -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,
       -4,   -4,   -4,   -4,   -4

    },

    {
        3,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,
       -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,
       -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,
       -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,
       -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,
       -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,
       -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,
       -5,   -5,   -5,   -5,   -5
    },

    {
        3,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,
       -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,

       -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,
       -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,
       -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,
       -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,
       -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,
       -6,   -6,   -6,   -6,   -6
    },

    {
        3,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,
       -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,
       69,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,
       -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,

       -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,
       -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,
       -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,
       -7,   -7,   -7,   -7,   -7
    },

    {
        3,   70,   70,   70,   70,   71,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70
    },

    {
        3,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,
       -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,
       -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,
       -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,
       -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,
       -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,
       -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,
       -9,   -9,   -9,   -9,   -9

    },

    {
        3,   72,   72,   72,   72,   72,   72,   71,   72,   72,
       72,   72,   72,   72,   72,   72,   72,   72,   72,   72,
       72,   72,   72,   72,   72,   72,   72,   72,   72,   72,
       72,   72,   72,   72,   72,   72,   72,   72,   72,   72,
       72,   72,   72,   72,   72,   72,   72,   72,   72,   72,
       72,   72,   72,   72,   72,   72,   72,   72,   72,   72,
       72,   72,   72,   72,   72,   72,   72,   72,   72,   72,
       72,   72,   72,   72,   72
    },

    {
        3,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,
      -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,

      -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,
      -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,
      -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,
      -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,
      -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,
      -11,  -11,  -11,  -11,  -11
    },

    {
        3,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,
      -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,
      -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,
      -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,

      -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,
      -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,
      -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,
      -12,  -12,  -12,  -12,  -12
    },

    {
        3,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,
      -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,
      -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,
      -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,
      -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,
      -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,

      -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,
      -13,  -13,  -13,  -13,  -13
    },

    {
        3,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,
      -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,
      -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,
      -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,
      -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,
      -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,
      -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,
      -14,  -14,  -14,  -14,  -14

    },

    {
        3,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,
      -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,
      -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,
      -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,
      -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,
      -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,
      -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,
      -15,  -15,  -15,  -15,  -15
    },

    {
        3,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,
      -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,

      -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,
      -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,
      -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,
      -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,
      -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,
      -16,  -16,  -16,  -16,  -16
    },

    {
        3,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,
      -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,
      -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,
      -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,

      -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,
      -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,
      -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,
      -17,  -17,  -17,  -17,  -17
    },

    {
        3,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,
      -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,
      -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,
      -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,
      -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,
      -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,

      -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,
      -18,  -18,  -18,  -18,  -18
    },

    {
        3,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,
      -19,  -19,  -19,  -19,   73,  -19,   74,  -19,  -19,  -19,
      -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,
      -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,
      -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,
      -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,
      -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,
      -19,  -19,  -19,  -19,  -19

    },

    {
        3,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,
      -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,
      -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,
      -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,
      -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,
      -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,
      -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,
      -20,  -20,  -20,  -20,  -20
    },

    {
        3,  -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,
      -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,

      -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,
      -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,
      -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,
      -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,
      -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,
      -21,  -21,  -21,  -21,  -21
    },

    {
        3,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,
      -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,
       69,   69,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,
      -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,

      -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,
      -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,
      -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,
      -22,  -22,  -22,  -22,  -22
    },

    {
        3,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,
      -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,
      -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,
      -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,
      -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,
      -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,

      -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,
      -23,  -23,  -23,  -23,  -23
    },

    {
        3,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,
      -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,
       69,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,
      -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,
      -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,
      -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,
      -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,
      -24,  -24,  -24,  -24,  -24

    },

    {
        3,  -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,
      -25,  -25,  -25,  -25,   75,  -25,   75,  -25,  -25,  -25,
      -25,  -25,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   76,   75,   77,   75,   75,   75,   78,
       75,   75,   75,   75,   75,   75,  -25,  -25,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -25,  -25,  -25
    },

    {
        3,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,
      -26,  -26,  -26,  -26,   75,  -26,   75,  -26,  -26,  -26,

      -26,  -26,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   79,  -26,  -26,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -26,  -26,  -26
    },

    {
        3,  -27,  -27,  -27,  -27,  -27,  -27,  -27,  -27,  -27,
      -27,  -27,  -27,  -27,   75,  -27,   75,  -27,  -27,  -27,
      -27,  -27,   80,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   81,   75,

       75,   75,   75,   75,   75,   75,  -27,  -27,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -27,  -27,  -27
    },

    {
        3,  -28,  -28,  -28,  -28,  -28,  -28,  -28,  -28,  -28,
      -28,  -28,  -28,  -28,   75,  -28,   75,  -28,  -28,  -28,
      -28,  -28,   75,   75,   75,   75,   82,   75,   75,   75,
       83,   75,   75,   75,   75,   75,   75,   75,   84,   75,
       75,   75,   75,   75,   75,   75,  -28,  -28,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -28,  -28,  -28
    },

    {
        3,  -29,  -29,  -29,  -29,  -29,  -29,  -29,  -29,  -29,
      -29,  -29,  -29,  -29,   75,  -29,   75,  -29,  -29,  -29,
      -29,  -29,   75,   75,   75,   85,   75,   75,   75,   75,
       75,   75,   75,   86,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   87,   75,  -29,  -29,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -29,  -29,  -29

    },

    {
        3,  -30,  -30,  -30,  -30,  -30,  -30,  -30,  -30,  -30,
      -30,  -30,  -30,  -30,   75,  -30,   75,  -30,  -30,  -30,
      -30,  -30,   88,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   89,   75,
       75,   75,   75,   75,   75,   75,  -30,  -30,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -30,  -30,  -30
    },

    {
        3,  -31,  -31,  -31,  -31,  -31,  -31,  -31,  -31,  -31,
      -31,  -31,  -31,  -31,   75,  -31,   75,  -31,  -31,  -31,

      -31,  -31,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   90,   75,
       75,   75,   75,   75,   75,   75,  -31,  -31,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -31,  -31,  -31
    },

    {
        3,  -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,
      -32,  -32,  -32,  -32,   75,  -32,   75,  -32,  -32,  -32,
      -32,  -32,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,  -32,  -32,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -32,  -32,  -32
    },

    {
        3,  -33,  -33,  -33,  -33,  -33,  -33,  -33,  -33,  -33,
      -33,  -33,  -33,  -33,   75,  -33,   75,  -33,  -33,  -33,
      -33,  -33,   75,   75,   75,   91,   75,   92,   75,   75,
       75,   75,   75,   75,   75,   93,   75,   75,   75,   94,
       75,   75,   75,   75,   75,   75,  -33,  -33,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -33,  -33,  -33
    },

    {
        3,  -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,
      -34,  -34,  -34,  -34,   75,  -34,   75,  -34,  -34,  -34,
      -34,  -34,   95,   75,   75,   75,   75,   75,   75,   75,
       96,   75,   75,   75,   75,   75,   97,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  -34,  -34,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -34,  -34,  -34

    },

    {
        3,  -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,
      -35,  -35,  -35,  -35,   75,  -35,   75,  -35,  -35,  -35,
      -35,  -35,   98,   75,   75,   75,   99,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  -35,  -35,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -35,  -35,  -35
    },

    {
        3,  -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,
      -36,  -36,  -36,  -36,   75,  -36,   75,  -36,  -36,  -36,

      -36,  -36,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  100,   75,   75,   75,
       75,  101,   75,   75,   75,   75,  -36,  -36,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -36,  -36,  -36
    },

    {
        3,  -37,  -37,  -37,  -37,  -37,  -37,  -37,  -37,  -37,
      -37,  -37,  -37,  -37,   75,  -37,   75,  -37,  -37,  -37,
      -37,  -37,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,  102,   75,  103,  104,   75,

       75,   75,   75,   75,   75,   75,  -37,  -37,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -37,  -37,  -37
    },

    {
        3,  -38,  -38,  -38,  -38,  -38,  -38,  -38,  -38,  -38,
      -38,  -38,  -38,  -38,   75,  -38,   75,  -38,  -38,  -38,
      -38,  -38,   75,   75,   75,   75,  105,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  -38,  -38,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -38,  -38,  -38
    },

    {
        3,  -39,  -39,  -39,  -39,  -39,  -39,  -39,  -39,  -39,
      -39,  -39,  -39,  -39,   75,  -39,   75,  -39,  -39,  -39,
      -39,  -39,   75,   75,   75,   75,  106,   75,   75,   75,
       75,   75,  107,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  -39,  -39,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -39,  -39,  -39

    },

    {
        3,  -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,
      -40,  -40,  -40,  -40,   75,  -40,   75,  -40,  -40,  -40,
      -40,  -40,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,  108,   75,
       75,   75,   75,   75,   75,   75,  -40,  -40,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -40,  -40,  -40
    },

    {
        3,  -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,
      -41,  -41,  -41,  -41,   75,  -41,   75,  -41,  -41,  -41,

      -41,  -41,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,  109,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  -41,  -41,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -41,  -41,  -41
    },

    {
        3,  -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,
      -42,  -42,  -42,  -42,   75,  -42,   75,  -42,  -42,  -42,
      -42,  -42,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,  110,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,  -42,  -42,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -42,  -42,  -42
    },

    {
        3,  -43,  -43,  -43,  -43,  -43,  -43,  -43,  -43,  -43,
      -43,  -43,  -43,  -43,   75,  -43,   75,  -43,  -43,  -43,
      -43,  -43,   75,   75,   75,   75,   75,   75,   75,  111,
      112,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  -43,  -43,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -43,  -43,  -43
    },

    {
        3,  -44,  -44,  -44,  -44,  -44,  -44,  -44,  -44,  -44,
      -44,  -44,  -44,  -44,   75,  -44,   75,  -44,  -44,  -44,
      -44,  -44,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  113,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  -44,  -44,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -44,  -44,  -44

    },

    {
        3,  -45,  -45,  -45,  -45,  -45,  -45,  -45,  -45,  -45,
      -45,  -45,  -45,  -45,  -45,  -45,  -45,  -45,  -45,  -45,
      -45,  -45,  -45,  -45,  -45,  -45,  -45,  -45,  -45,  -45,
      -45,  -45,  -45,  -45,  -45,  -45,  -45,  -45,  -45,  -45,
      -45,  -45,  -45,  -45,  -45,  -45,  -45,  -45,  -45,  -45,
      -45,  -45,  -45,  -45,  -45,  -45,  -45,  -45,  -45,  -45,
      -45,  -45,  -45,  -45,  -45,  -45,  -45,  -45,  -45,  -45,
      -45,  -45,  -45,  -45,  -45
    },

    {
        3,  -46,  -46,  -46,  -46,  -46,  -46,  -46,  -46,  -46,
      -46,  -46,  -46,  -46,  -46,  -46,  -46,  -46,  -46,  -46,

      -46,  -46,  -46,  -46,  -46,  -46,  -46,  -46,  -46,  -46,
      -46,  -46,  -46,  -46,  -46,  -46,  -46,  -46,  -46,  -46,
      -46,  -46,  -46,  -46,  -46,  -46,  -46,  -46,  -46,  -46,
      -46,  -46,  -46,  -46,  -46,  -46,  -46,  -46,  -46,  -46,
      -46,  -46,  -46,  -46,  -46,  -46,  -46,  -46,  -46,  -46,
      -46,  -46,  -46,  -46,  -46
    },

    {
        3,  -47,  -47,  -47,  -47,  -47,  -47,  -47,  -47,  -47,
      -47,  -47,  -47,  -47,   75,  -47,   75,  -47,  -47,  -47,
      -47,  -47,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,  -47,  -47,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,  114,
       75,  115,   75,   75,   75,  116,   75,   75,   75,   75,
       75,   75,  -47,  -47,  -47
    },

    {
        3,  -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,
      -48,  -48,  -48,  -48,   75,  -48,   75,  -48,  -48,  -48,
      -48,  -48,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  -48,  -48,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   79,  -48,  -48,  -48
    },

    {
        3,  -49,  -49,  -49,  -49,  -49,  -49,  -49,  -49,  -49,
      -49,  -49,  -49,  -49,   75,  -49,   75,  -49,  -49,  -49,
      -49,  -49,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  -49,  -49,   75,  117,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,  118,   75,   75,   75,   75,   75,
       75,   75,  -49,  -49,  -49

    },

    {
        3,  -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,
      -50,  -50,  -50,  -50,   75,  -50,   75,  -50,  -50,  -50,
      -50,  -50,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  -50,  -50,   75,   75,
       75,   75,   75,  119,   75,   75,   75,  120,   75,   75,
       75,   75,   75,   75,  121,   75,   75,   75,   75,   75,
       75,   75,  -50,  -50,  -50
    },

    {
        3,  -51,  -51,  -51,  -51,  -51,  -51,  -51,  -51,  -51,
      -51,  -51,  -51,  -51,   75,  -51,   75,  -51,  -51,  -51,

      -51,  -51,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  -51,  -51,   75,   75,
       75,   75,  122,   75,   75,   75,   75,   75,   75,  123,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
      124,   75,  -51,  -51,  -51
    },

    {
        3,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,
      -52,  -52,  -52,  -52,   75,  -52,   75,  -52,  -52,  -52,
      -52,  -52,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,  -52,  -52,   75,  125,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,  126,   75,   75,   75,   75,   75,
       75,   75,  -52,  -52,  -52
    },

    {
        3,  -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,
      -53,  -53,  -53,  -53,   75,  -53,   75,  -53,  -53,  -53,
      -53,  -53,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  -53,  -53,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,  127,   75,   75,   75,   75,   75,
       75,   75,  -53,  -53,  -53
    },

    {
        3,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,
      -54,  -54,  -54,  -54,   75,  -54,   75,  -54,  -54,  -54,
      -54,  -54,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  -54,  -54,   75,   75,
       75,   75,  128,   75,   92,   75,   75,   75,   75,   75,
       75,  129,   75,   75,   75,   94,   75,   75,   75,   75,
       75,   75,  -54,  -54,  -54

    },

    {
        3,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,
      -55,  -55,  -55,  -55,   75,  -55,   75,  -55,  -55,  -55,
      -55,  -55,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  -55,  -55,   75,  130,
       75,   75,   75,   75,   75,   75,   75,  131,   75,   75,
       75,   75,  132,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -55,  -55,  -55
    },

    {
        3,  -56,  -56,  -56,  -56,  -56,  -56,  -56,  -56,  -56,
      -56,  -56,  -56,  -56,   75,  -56,   75,  -56,  -56,  -56,

      -56,  -56,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  -56,  -56,   75,  133,
       75,   75,   75,  134,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -56,  -56,  -56
    },

    {
        3,  -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,
      -57,  -57,  -57,  -57,   75,  -57,   75,  -57,  -57,  -57,
      -57,  -57,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,  -57,  -57,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  135,   75,   75,   75,   75,  136,   75,   75,
       75,   75,  -57,  -57,  -57
    },

    {
        3,  -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,
      -58,  -58,  -58,  -58,   75,  -58,   75,  -58,  -58,  -58,
      -58,  -58,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  -58,  -58,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,  137,   75,  138,  139,   75,   75,   75,   75,   75,
       75,   75,  -58,  -58,  -58
    },

    {
        3,  -59,  -59,  -59,  -59,  -59,  -59,  -59,  -59,  -59,
      -59,  -59,  -59,  -59,   75,  -59,   75,  -59,  -59,  -59,
      -59,  -59,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  -59,  -59,   75,   75,
       75,   75,   75,  140,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -59,  -59,  -59

    },

    {
        3,  -60,  -60,  -60,  -60,  -60,  -60,  -60,  -60,  -60,
      -60,  -60,  -60,  -60,   75,  -60,   75,  -60,  -60,  -60,
      -60,  -60,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  -60,  -60,   75,   75,
       75,   75,   75,  141,   75,   75,   75,   75,  142,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -60,  -60,  -60
    },

    {
        3,  -61,  -61,  -61,  -61,  -61,  -61,  -61,  -61,  -61,
      -61,  -61,  -61,  -61,   75,  -61,   75,  -61,  -61,  -61,

      -61,  -61,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  -61,  -61,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,  143,   75,   75,   75,   75,   75,
       75,   75,  -61,  -61,  -61
    },

    {
        3,  -62,  -62,  -62,  -62,  -62,  -62,  -62,  -62,  -62,
      -62,  -62,  -62,  -62,   75,  -62,   75,  -62,  -62,  -62,
      -62,  -62,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,  -62,  -62,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,  144,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -62,  -62,  -62
    },

    {
        3,  -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,
      -63,  -63,  -63,  -63,   75,  -63,   75,  -63,  -63,  -63,
      -63,  -63,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  -63,  -63,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,  145,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -63,  -63,  -63
    },

    {
        3,  -64,  -64,  -64,  -64,  -64,  -64,  -64,  -64,  -64,
      -64,  -64,  -64,  -64,   75,  -64,   75,  -64,  -64,  -64,
      -64,  -64,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  -64,  -64,   75,   75,
       75,   75,   75,   75,   75,   75,  146,  147,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -64,  -64,  -64

    },

    {
        3,  -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,
      -65,  -65,  -65,  -65,   75,  -65,   75,  -65,  -65,  -65,
      -65,  -65,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  -65,  -65,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  148,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -65,  -65,  -65
    },

    {
        3,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,
      -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,

      -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,
      -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,
      -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,
      -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,
      -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,
      -66,  -66,  -66,  -66,  -66
    },

    {
        3,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,
      -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,
      -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,
      -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,

      -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,
      -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,
      -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,
      -67,  -67,  -67,  -67,  -67
    },

    {
        3,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,
      -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,
      -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,
      -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,
      -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,
      -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,

      -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,
      -68,  -68,  -68,  -68,  -68
    },

    {
        3,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,
      -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,
      -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,
      -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,
      -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,
      -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,
      -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,
      -69,  -69,  -69,  -69,  -69

    },

    {
        3,   70,   70,   70,   70,   71,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70
    },

    {
        3,  -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,
      -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,

      -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,
      -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,
      -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,
      -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,
      -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,
      -71,  -71,  -71,  -71,  -71
    },

    {
        3,   72,   72,   72,   72,   72,   72,   71,   72,   72,
       72,   72,   72,   72,   72,   72,   72,   72,   72,   72,
       72,   72,   72,   72,   72,   72,   72,   72,   72,   72,
       72,   72,   72,   72,   72,   72,   72,   72,   72,   72,

       72,   72,   72,   72,   72,   72,   72,   72,   72,   72,
       72,   72,   72,   72,   72,   72,   72,   72,   72,   72,
       72,   72,   72,   72,   72,   72,   72,   72,   72,   72,
       72,   72,   72,   72,   72
    },

    {
        3,  -73,  -73,  -73,  -73,  -73,  -73,  -73,  -73,  -73,
      -73,  -73,  -73,  -73,  -73,  -73,  149,  -73,  -73,  -73,
      -73,  -73,  -73,  -73,  -73,  -73,  -73,  -73,  -73,  -73,
      -73,  -73,  -73,  -73,  -73,  -73,  -73,  -73,  -73,  -73,
      -73,  -73,  -73,  -73,  -73,  -73,  -73,  -73,  -73,  -73,
      -73,  -73,  -73,  -73,  -73,  -73,  -73,  -73,  -73,  -73,

      -73,  -73,  -73,  -73,  -73,  -73,  -73,  -73,  -73,  -73,
      -73,  -73,  -73,  -73,  -73
    },

    {
        3,  -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,
      -74,  -74,  -74,  -74,   73,  -74,   74,  -74,  -74,  -74,
      -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,
      -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,
      -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,
      -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,
      -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,
      -74,  -74,  -74,  -74,  -74

    },

    {
        3,  -75,  -75,  -75,  -75,  -75,  -75,  -75,  -75,  -75,
      -75,  -75,  -75,  -75,   75,  -75,   75,  -75,  -75,  -75,
      -75,  -75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  -75,  -75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -75,  -75,  -75
    },

    {
        3,  -76,  -76,  -76,  -76,  -76,  -76,  -76,  -76,  -76,
      -76,  -76,  -76,  -76,   75,  -76,   75,  -76,  -76,  -76,

      -76,  -76,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,  150,   75,   75,   75,   75,   75,   75,
      151,   75,   75,   75,   75,   75,  -76,  -76,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -76,  -76,  -76
    },

    {
        3,  -77,  -77,  -77,  -77,  -77,  -77,  -77,  -77,  -77,
      -77,  -77,  -77,  -77,   75,  -77,   75,  -77,  -77,  -77,
      -77,  -77,   75,   75,   75,  152,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,  -77,  -77,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -77,  -77,  -77
    },

    {
        3,  -78,  -78,  -78,  -78,  -78,  -78,  -78,  -78,  -78,
      -78,  -78,  -78,  -78,   75,  -78,   75,  -78,  -78,  -78,
      -78,  -78,   75,   75,  153,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  -78,  -78,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -78,  -78,  -78
    },

    {
        3,  -79,  -79,  -79,  -79,  -79,  -79,  -79,  -79,  -79,
      -79,  -79,  -79,  -79,   75,  -79,   75,  -79,  -79,  -79,
      -79,  -79,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  -79,  -79,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -79,  -79,  -79

    },

    {
        3,  -80,  -80,  -80,  -80,  -80,  -80,  -80,  -80,  -80,
      -80,  -80,  -80,  -80,   75,  -80,   75,  -80,  -80,  -80,
      -80,  -80,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,  154,
       75,   75,   75,   75,   75,   75,  -80,  -80,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -80,  -80,  -80
    },

    {
        3,  -81,  -81,  -81,  -81,  -81,  -81,  -81,  -81,  -81,
      -81,  -81,  -81,  -81,   75,  -81,   75,  -81,  -81,  -81,

      -81,  -81,   75,   75,   75,   75,  155,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  -81,  -81,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -81,  -81,  -81
    },

    {
        3,  -82,  -82,  -82,  -82,  -82,  -82,  -82,  -82,  -82,
      -82,  -82,  -82,  -82,   75,  -82,   75,  -82,  -82,  -82,
      -82,  -82,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,  156,   75,   75,   75,   75,   75,  157,

      158,   75,   75,   75,   75,   75,  -82,  -82,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -82,  -82,  -82
    },

    {
        3,  -83,  -83,  -83,  -83,  -83,  -83,  -83,  -83,  -83,
      -83,  -83,  -83,  -83,   75,  -83,   75,  -83,  -83,  -83,
      -83,  -83,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,  159,
       75,   75,   75,   75,   75,   75,  -83,  -83,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -83,  -83,  -83
    },

    {
        3,  -84,  -84,  -84,  -84,  -84,  -84,  -84,  -84,  -84,
      -84,  -84,  -84,  -84,   75,  -84,   75,  -84,  -84,  -84,
      -84,  -84,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  160,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  -84,  -84,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -84,  -84,  -84

    },

    {
        3,  -85,  -85,  -85,  -85,  -85,  -85,  -85,  -85,  -85,
      -85,  -85,  -85,  -85,   75,  -85,   75,  -85,  -85,  -85,
      -85,  -85,   75,   75,   75,   75,   75,   75,  161,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  -85,  -85,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -85,  -85,  -85
    },

    {
        3,  -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,
      -86,  -86,  -86,  -86,   75,  -86,   75,  -86,  -86,  -86,

      -86,  -86,  162,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  -86,  -86,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -86,  -86,  -86
    },

    {
        3,  -87,  -87,  -87,  -87,  -87,  -87,  -87,  -87,  -87,
      -87,  -87,  -87,  -87,   75,  -87,   75,  -87,  -87,  -87,
      -87,  -87,   75,   75,   75,   75,   75,   75,   75,   75,
      163,   75,   75,   75,   75,   75,   75,  164,   75,   75,

       75,   75,   75,   75,   75,   75,  -87,  -87,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -87,  -87,  -87
    },

    {
        3,  -88,  -88,  -88,  -88,  -88,  -88,  -88,  -88,  -88,
      -88,  -88,  -88,  -88,   75,  -88,   75,  -88,  -88,  -88,
      -88,  -88,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,  165,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  -88,  -88,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -88,  -88,  -88
    },

    {
        3,  -89,  -89,  -89,  -89,  -89,  -89,  -89,  -89,  -89,
      -89,  -89,  -89,  -89,   75,  -89,   75,  -89,  -89,  -89,
      -89,  -89,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  166,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  -89,  -89,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -89,  -89,  -89

    },

    {
        3,  -90,  -90,  -90,  -90,  -90,  -90,  -90,  -90,  -90,
      -90,  -90,  -90,  -90,   75,  -90,   75,  -90,  -90,  -90,
      -90,  -90,  167,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  -90,  -90,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -90,  -90,  -90
    },

    {
        3,  -91,  -91,  -91,  -91,  -91,  -91,  -91,  -91,  -91,
      -91,  -91,  -91,  -91,   75,  -91,   75,  -91,  -91,  -91,

      -91,  -91,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,  168,
       75,   75,   75,   75,   75,   75,  -91,  -91,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -91,  -91,  -91
    },

    {
        3,  -92,  -92,  -92,  -92,  -92,  -92,  -92,  -92,  -92,
      -92,  -92,  -92,  -92,   75,  -92,   75,  -92,  -92,  -92,
      -92,  -92,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,  -92,  -92,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -92,  -92,  -92
    },

    {
        3,  -93,  -93,  -93,  -93,  -93,  -93,  -93,  -93,  -93,
      -93,  -93,  -93,  -93,   75,  -93,   75,  -93,  -93,  -93,
      -93,  -93,   75,   75,   75,   75,   75,   75,   75,  169,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  -93,  -93,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -93,  -93,  -93
    },

    {
        3,  -94,  -94,  -94,  -94,  -94,  -94,  -94,  -94,  -94,
      -94,  -94,  -94,  -94,   75,  -94,   75,  -94,  -94,  -94,
      -94,  -94,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  -94,  -94,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -94,  -94,  -94

    },

    {
        3,  -95,  -95,  -95,  -95,  -95,  -95,  -95,  -95,  -95,
      -95,  -95,  -95,  -95,   75,  -95,   75,  -95,  -95,  -95,
      -95,  -95,   75,  170,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  -95,  -95,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -95,  -95,  -95
    },

    {
        3,  -96,  -96,  -96,  -96,  -96,  -96,  -96,  -96,  -96,
      -96,  -96,  -96,  -96,   75,  -96,   75,  -96,  -96,  -96,

      -96,  -96,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,  171,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  -96,  -96,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -96,  -96,  -96
    },

    {
        3,  -97,  -97,  -97,  -97,  -97,  -97,  -97,  -97,  -97,
      -97,  -97,  -97,  -97,   75,  -97,   75,  -97,  -97,  -97,
      -97,  -97,  172,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,  -97,  -97,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -97,  -97,  -97
    },

    {
        3,  -98,  -98,  -98,  -98,  -98,  -98,  -98,  -98,  -98,
      -98,  -98,  -98,  -98,   75,  -98,   75,  -98,  -98,  -98,
      -98,  -98,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
      173,   75,   75,   75,   75,   75,  -98,  -98,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -98,  -98,  -98
    },

    {
        3,  -99,  -99,  -99,  -99,  -99,  -99,  -99,  -99,  -99,
      -99,  -99,  -99,  -99,   75,  -99,   75,  -99,  -99,  -99,
      -99,  -99,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,  174,   75,
       75,   75,   75,   75,   75,   75,  -99,  -99,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  -99,  -99,  -99

    },

    {
        3, -100, -100, -100, -100, -100, -100, -100, -100, -100,
     -100, -100, -100, -100,   75, -100,   75, -100, -100, -100,
     -100, -100,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
      175,   75,   75,   75,   75,   75, -100, -100,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -100, -100, -100
    },

    {
        3, -101, -101, -101, -101, -101, -101, -101, -101, -101,
     -101, -101, -101, -101,   75, -101,   75, -101, -101, -101,

     -101, -101,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,  176,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -101, -101,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -101, -101, -101
    },

    {
        3, -102, -102, -102, -102, -102, -102, -102, -102, -102,
     -102, -102, -102, -102,   75, -102,   75, -102, -102, -102,
     -102, -102,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,  177,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -102, -102,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -102, -102, -102
    },

    {
        3, -103, -103, -103, -103, -103, -103, -103, -103, -103,
     -103, -103, -103, -103,   75, -103,   75, -103, -103, -103,
     -103, -103,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
      178,   75,   75,   75,   75,   75, -103, -103,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -103, -103, -103
    },

    {
        3, -104, -104, -104, -104, -104, -104, -104, -104, -104,
     -104, -104, -104, -104,   75, -104,   75, -104, -104, -104,
     -104, -104,   75,   75,   75,  179,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -104, -104,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -104, -104, -104

    },

    {
        3, -105, -105, -105, -105, -105, -105, -105, -105, -105,
     -105, -105, -105, -105,   75, -105,   75, -105, -105, -105,
     -105, -105,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,  180,  181,   75,   75,   75,   75,
      182,   75,   75,   75,   75,   75, -105, -105,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -105, -105, -105
    },

    {
        3, -106, -106, -106, -106, -106, -106, -106, -106, -106,
     -106, -106, -106, -106,   75, -106,   75, -106, -106, -106,

     -106, -106,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,  183,   75,   75,   75,   75,   75,   75,
      184,   75,   75,   75,   75,   75, -106, -106,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -106, -106, -106
    },

    {
        3, -107, -107, -107, -107, -107, -107, -107, -107, -107,
     -107, -107, -107, -107,   75, -107,   75, -107, -107, -107,
     -107, -107,   75,   75,   75,   75,   75,   75,   75,   75,
      185,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -107, -107,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -107, -107, -107
    },

    {
        3, -108, -108, -108, -108, -108, -108, -108, -108, -108,
     -108, -108, -108, -108,   75, -108,   75, -108, -108, -108,
     -108, -108,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,  186,   75,   75,   75,   75, -108, -108,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -108, -108, -108
    },

    {
        3, -109, -109, -109, -109, -109, -109, -109, -109, -109,
     -109, -109, -109, -109,   75, -109,   75, -109, -109, -109,
     -109, -109,   75,   75,   75,   75,   75,   75,   75,   75,
      187,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,  188,   75,   75, -109, -109,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -109, -109, -109

    },

    {
        3, -110, -110, -110, -110, -110, -110, -110, -110, -110,
     -110, -110, -110, -110,   75, -110,   75, -110, -110, -110,
     -110, -110,  189,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -110, -110,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -110, -110, -110
    },

    {
        3, -111, -111, -111, -111, -111, -111, -111, -111, -111,
     -111, -111, -111, -111,   75, -111,   75, -111, -111, -111,

     -111, -111,   75,   75,   75,   75,  190,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -111, -111,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -111, -111, -111
    },

    {
        3, -112, -112, -112, -112, -112, -112, -112, -112, -112,
     -112, -112, -112, -112,   75, -112,   75, -112, -112, -112,
     -112, -112,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

      191,   75,   75,   75,   75,   75, -112, -112,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -112, -112, -112
    },

    {
        3, -113, -113, -113, -113, -113, -113, -113, -113, -113,
     -113, -113, -113, -113,   75, -113,   75, -113, -113, -113,
     -113, -113,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,  192,   75,
       75,   75,   75,   75,   75,   75, -113, -113,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -113, -113, -113
    },

    {
        3, -114, -114, -114, -114, -114, -114, -114, -114, -114,
     -114, -114, -114, -114,   75, -114,   75, -114, -114, -114,
     -114, -114,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -114, -114,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,  150,
       75,   75,   75,   75,   75,   75,  193,   75,   75,   75,
       75,   75, -114, -114, -114

    },

    {
        3, -115, -115, -115, -115, -115, -115, -115, -115, -115,
     -115, -115, -115, -115,   75, -115,   75, -115, -115, -115,
     -115, -115,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -115, -115,   75,   75,
       75,   75,  152,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -115, -115, -115
    },

    {
        3, -116, -116, -116, -116, -116, -116, -116, -116, -116,
     -116, -116, -116, -116,   75, -116,   75, -116, -116, -116,

     -116, -116,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -116, -116,   75,   75,
       75,  153,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -116, -116, -116
    },

    {
        3, -117, -117, -117, -117, -117, -117, -117, -117, -117,
     -117, -117, -117, -117,   75, -117,   75, -117, -117, -117,
     -117, -117,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -117, -117,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,  194,   75,   75,   75,   75,
       75,   75, -117, -117, -117
    },

    {
        3, -118, -118, -118, -118, -118, -118, -118, -118, -118,
     -118, -118, -118, -118,   75, -118,   75, -118, -118, -118,
     -118, -118,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -118, -118,   75,   75,
       75,   75,   75,  195,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -118, -118, -118
    },

    {
        3, -119, -119, -119, -119, -119, -119, -119, -119, -119,
     -119, -119, -119, -119,   75, -119,   75, -119, -119, -119,
     -119, -119,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -119, -119,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,  196,
       75,   75,   75,   75,   75,  197,  198,   75,   75,   75,
       75,   75, -119, -119, -119

    },

    {
        3, -120, -120, -120, -120, -120, -120, -120, -120, -120,
     -120, -120, -120, -120,   75, -120,   75, -120, -120, -120,
     -120, -120,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -120, -120,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,  199,   75,   75,   75,   75,
       75,   75, -120, -120, -120
    },

    {
        3, -121, -121, -121, -121, -121, -121, -121, -121, -121,
     -121, -121, -121, -121,   75, -121,   75, -121, -121, -121,

     -121, -121,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -121, -121,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  200,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -121, -121, -121
    },

    {
        3, -122, -122, -122, -122, -122, -122, -122, -122, -122,
     -122, -122, -122, -122,   75, -122,   75, -122, -122, -122,
     -122, -122,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -122, -122,   75,   75,
       75,   75,   75,   75,   75,  201,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -122, -122, -122
    },

    {
        3, -123, -123, -123, -123, -123, -123, -123, -123, -123,
     -123, -123, -123, -123,   75, -123,   75, -123, -123, -123,
     -123, -123,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -123, -123,   75,  202,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -123, -123, -123
    },

    {
        3, -124, -124, -124, -124, -124, -124, -124, -124, -124,
     -124, -124, -124, -124,   75, -124,   75, -124, -124, -124,
     -124, -124,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -124, -124,   75,   75,
       75,   75,   75,   75,   75,   75,   75,  203,   75,   75,
       75,   75,   75,  204,   75,   75,   75,   75,   75,   75,
       75,   75, -124, -124, -124

    },

    {
        3, -125, -125, -125, -125, -125, -125, -125, -125, -125,
     -125, -125, -125, -125,   75, -125,   75, -125, -125, -125,
     -125, -125,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -125, -125,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,  205,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -125, -125, -125
    },

    {
        3, -126, -126, -126, -126, -126, -126, -126, -126, -126,
     -126, -126, -126, -126,   75, -126,   75, -126, -126, -126,

     -126, -126,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -126, -126,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  206,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -126, -126, -126
    },

    {
        3, -127, -127, -127, -127, -127, -127, -127, -127, -127,
     -127, -127, -127, -127,   75, -127,   75, -127, -127, -127,
     -127, -127,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -127, -127,   75,  207,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -127, -127, -127
    },

    {
        3, -128, -128, -128, -128, -128, -128, -128, -128, -128,
     -128, -128, -128, -128,   75, -128,   75, -128, -128, -128,
     -128, -128,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -128, -128,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,  168,   75,   75,   75,   75,
       75,   75, -128, -128, -128
    },

    {
        3, -129, -129, -129, -129, -129, -129, -129, -129, -129,
     -129, -129, -129, -129,   75, -129,   75, -129, -129, -129,
     -129, -129,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -129, -129,   75,   75,
       75,   75,   75,   75,   75,   75,  208,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -129, -129, -129

    },

    {
        3, -130, -130, -130, -130, -130, -130, -130, -130, -130,
     -130, -130, -130, -130,   75, -130,   75, -130, -130, -130,
     -130, -130,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -130, -130,   75,   75,
      209,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -130, -130, -130
    },

    {
        3, -131, -131, -131, -131, -131, -131, -131, -131, -131,
     -131, -131, -131, -131,   75, -131,   75, -131, -131, -131,

     -131, -131,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -131, -131,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
      210,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -131, -131, -131
    },

    {
        3, -132, -132, -132, -132, -132, -132, -132, -132, -132,
     -132, -132, -132, -132,   75, -132,   75, -132, -132, -132,
     -132, -132,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -132, -132,   75,  211,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -132, -132, -132
    },

    {
        3, -133, -133, -133, -133, -133, -133, -133, -133, -133,
     -133, -133, -133, -133,   75, -133,   75, -133, -133, -133,
     -133, -133,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -133, -133,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,  212,   75,   75,   75,
       75,   75, -133, -133, -133
    },

    {
        3, -134, -134, -134, -134, -134, -134, -134, -134, -134,
     -134, -134, -134, -134,   75, -134,   75, -134, -134, -134,
     -134, -134,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -134, -134,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,  213,   75,   75,   75,   75,   75,
       75,   75, -134, -134, -134

    },

    {
        3, -135, -135, -135, -135, -135, -135, -135, -135, -135,
     -135, -135, -135, -135,   75, -135,   75, -135, -135, -135,
     -135, -135,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -135, -135,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  175,   75,   75,   75,
       75,   75, -135, -135, -135
    },

    {
        3, -136, -136, -136, -136, -136, -136, -136, -136, -136,
     -136, -136, -136, -136,   75, -136,   75, -136, -136, -136,

     -136, -136,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -136, -136,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,  214,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -136, -136, -136
    },

    {
        3, -137, -137, -137, -137, -137, -137, -137, -137, -137,
     -137, -137, -137, -137,   75, -137,   75, -137, -137, -137,
     -137, -137,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -137, -137,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,  215,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -137, -137, -137
    },

    {
        3, -138, -138, -138, -138, -138, -138, -138, -138, -138,
     -138, -138, -138, -138,   75, -138,   75, -138, -138, -138,
     -138, -138,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -138, -138,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,  216,   75,   75,   75,
       75,   75, -138, -138, -138
    },

    {
        3, -139, -139, -139, -139, -139, -139, -139, -139, -139,
     -139, -139, -139, -139,   75, -139,   75, -139, -139, -139,
     -139, -139,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -139, -139,   75,   75,
       75,   75,  217,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -139, -139, -139

    },

    {
        3, -140, -140, -140, -140, -140, -140, -140, -140, -140,
     -140, -140, -140, -140,   75, -140,   75, -140, -140, -140,
     -140, -140,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -140, -140,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
      218,  219,   75,   75,   75,   75,  220,   75,   75,   75,
       75,   75, -140, -140, -140
    },

    {
        3, -141, -141, -141, -141, -141, -141, -141, -141, -141,
     -141, -141, -141, -141,   75, -141,   75, -141, -141, -141,

     -141, -141,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -141, -141,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,  221,
       75,   75,   75,   75,   75,   75,  184,   75,   75,   75,
       75,   75, -141, -141, -141
    },

    {
        3, -142, -142, -142, -142, -142, -142, -142, -142, -142,
     -142, -142, -142, -142,   75, -142,   75, -142, -142, -142,
     -142, -142,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -142, -142,   75,   75,
       75,   75,   75,   75,   75,   75,   75,  222,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -142, -142, -142
    },

    {
        3, -143, -143, -143, -143, -143, -143, -143, -143, -143,
     -143, -143, -143, -143,   75, -143,   75, -143, -143, -143,
     -143, -143,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -143, -143,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,  223,   75,   75,
       75,   75, -143, -143, -143
    },

    {
        3, -144, -144, -144, -144, -144, -144, -144, -144, -144,
     -144, -144, -144, -144,   75, -144,   75, -144, -144, -144,
     -144, -144,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -144, -144,   75,   75,
       75,   75,   75,   75,   75,   75,   75,  224,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,  225,
       75,   75, -144, -144, -144

    },

    {
        3, -145, -145, -145, -145, -145, -145, -145, -145, -145,
     -145, -145, -145, -145,   75, -145,   75, -145, -145, -145,
     -145, -145,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -145, -145,   75,  226,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -145, -145, -145
    },

    {
        3, -146, -146, -146, -146, -146, -146, -146, -146, -146,
     -146, -146, -146, -146,   75, -146,   75, -146, -146, -146,

     -146, -146,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -146, -146,   75,   75,
       75,   75,   75,  227,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -146, -146, -146
    },

    {
        3, -147, -147, -147, -147, -147, -147, -147, -147, -147,
     -147, -147, -147, -147,   75, -147,   75, -147, -147, -147,
     -147, -147,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -147, -147,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  228,   75,   75,   75,
       75,   75, -147, -147, -147
    },

    {
        3, -148, -148, -148, -148, -148, -148, -148, -148, -148,
     -148, -148, -148, -148,   75, -148,   75, -148, -148, -148,
     -148, -148,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -148, -148,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,  192,   75,   75,   75,   75,   75,
       75,   75, -148, -148, -148
    },

    {
        3, -149, -149, -149, -149, -149, -149, -149, -149, -149,
     -149, -149, -149, -149, -149, -149,  149, -149, -149, -149,
     -149, -149, -149, -149, -149, -149, -149, -149, -149, -149,
     -149, -149, -149, -149, -149, -149, -149, -149, -149, -149,
     -149, -149, -149, -149, -149, -149, -149, -149, -149, -149,
     -149, -149, -149, -149, -149, -149, -149, -149, -149, -149,
     -149, -149, -149, -149, -149, -149, -149, -149, -149, -149,
     -149, -149, -149, -149, -149

    },

    {
        3, -150, -150, -150, -150, -150, -150, -150, -150, -150,
     -150, -150, -150, -150,   75, -150,   75, -150, -150, -150,
     -150, -150,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -150, -150,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -150, -150, -150
    },

    {
        3, -151, -151, -151, -151, -151, -151, -151, -151, -151,
     -151, -151, -151, -151,   75, -151,   75, -151, -151, -151,

     -151, -151,   75,   75,   75,   75,  229,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -151, -151,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -151, -151, -151
    },

    {
        3, -152, -152, -152, -152, -152, -152, -152, -152, -152,
     -152, -152, -152, -152,   75, -152,   75, -152, -152, -152,
     -152, -152,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -152, -152,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -152, -152, -152
    },

    {
        3, -153, -153, -153, -153, -153, -153, -153, -153, -153,
     -153, -153, -153, -153,   75, -153,   75, -153, -153, -153,
     -153, -153,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -153, -153,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -153, -153, -153
    },

    {
        3, -154, -154, -154, -154, -154, -154, -154, -154, -154,
     -154, -154, -154, -154,   75, -154,   75, -154, -154, -154,
     -154, -154,   75,   75,  230,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -154, -154,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -154, -154, -154

    },

    {
        3, -155, -155, -155, -155, -155, -155, -155, -155, -155,
     -155, -155, -155, -155,   75, -155,   75, -155, -155, -155,
     -155, -155,  231,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -155, -155,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -155, -155, -155
    },

    {
        3, -156, -156, -156, -156, -156, -156, -156, -156, -156,
     -156, -156, -156, -156,   75, -156,   75, -156, -156, -156,

     -156, -156,   75,   75,   75,   75,  232,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -156, -156,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -156, -156, -156
    },

    {
        3, -157, -157, -157, -157, -157, -157, -157, -157, -157,
     -157, -157, -157, -157,   75, -157,   75, -157, -157, -157,
     -157, -157,   75,   75,  233,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -157, -157,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -157, -157, -157
    },

    {
        3, -158, -158, -158, -158, -158, -158, -158, -158, -158,
     -158, -158, -158, -158,   75, -158,   75, -158, -158, -158,
     -158, -158,  234,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -158, -158,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -158, -158, -158
    },

    {
        3, -159, -159, -159, -159, -159, -159, -159, -159, -159,
     -159, -159, -159, -159,   75, -159,   75, -159, -159, -159,
     -159, -159,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
      235,   75,   75,   75,   75,   75, -159, -159,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -159, -159, -159

    },

    {
        3, -160, -160, -160, -160, -160, -160, -160, -160, -160,
     -160, -160, -160, -160,   75, -160,   75, -160, -160, -160,
     -160, -160,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,  236,   75,   75,
       75,   75,   75,   75,   75,   75, -160, -160,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -160, -160, -160
    },

    {
        3, -161, -161, -161, -161, -161, -161, -161, -161, -161,
     -161, -161, -161, -161,   75, -161,   75, -161, -161, -161,

     -161, -161,   75,   75,   75,   75,  237,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -161, -161,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -161, -161, -161
    },

    {
        3, -162, -162, -162, -162, -162, -162, -162, -162, -162,
     -162, -162, -162, -162,   75, -162,   75, -162, -162, -162,
     -162, -162,   75,  238,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -162, -162,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -162, -162, -162
    },

    {
        3, -163, -163, -163, -163, -163, -163, -163, -163, -163,
     -163, -163, -163, -163,   75, -163,   75, -163, -163, -163,
     -163, -163,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,  239,
       75,   75,   75,   75,   75,   75, -163, -163,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -163, -163, -163
    },

    {
        3, -164, -164, -164, -164, -164, -164, -164, -164, -164,
     -164, -164, -164, -164,   75, -164,   75, -164, -164, -164,
     -164, -164,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,  240,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -164, -164,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -164, -164, -164

    },

    {
        3, -165, -165, -165, -165, -165, -165, -165, -165, -165,
     -165, -165, -165, -165,   75, -165,   75, -165, -165, -165,
     -165, -165,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,  241,
       75,   75,   75,   75,   75,   75, -165, -165,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -165, -165, -165
    },

    {
        3, -166, -166, -166, -166, -166, -166, -166, -166, -166,
     -166, -166, -166, -166,   75, -166,   75, -166, -166, -166,

     -166, -166,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,  242,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -166, -166,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -166, -166, -166
    },

    {
        3, -167, -167, -167, -167, -167, -167, -167, -167, -167,
     -167, -167, -167, -167,   75, -167,   75, -167, -167, -167,
     -167, -167,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,  243,   75,   75,

       75,   75,   75,   75,   75,   75, -167, -167,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -167, -167, -167
    },

    {
        3, -168, -168, -168, -168, -168, -168, -168, -168, -168,
     -168, -168, -168, -168,   75, -168,   75, -168, -168, -168,
     -168, -168,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -168, -168,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -168, -168, -168
    },

    {
        3, -169, -169, -169, -169, -169, -169, -169, -169, -169,
     -169, -169, -169, -169,   75, -169,   75, -169, -169, -169,
     -169, -169,   75,   75,   75,   75,  244,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -169, -169,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -169, -169, -169

    },

    {
        3, -170, -170, -170, -170, -170, -170, -170, -170, -170,
     -170, -170, -170, -170,   75, -170,   75, -170, -170, -170,
     -170, -170,   75,   75,   75,   75,  245,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -170, -170,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -170, -170, -170
    },

    {
        3, -171, -171, -171, -171, -171, -171, -171, -171, -171,
     -171, -171, -171, -171,   75, -171,   75, -171, -171, -171,

     -171, -171,   75,   75,   75,   75,   75,   75,   75,   75,
      246,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -171, -171,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -171, -171, -171
    },

    {
        3, -172, -172, -172, -172, -172, -172, -172, -172, -172,
     -172, -172, -172, -172,   75, -172,   75, -172, -172, -172,
     -172, -172,   75,   75,   75,  247,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -172, -172,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -172, -172, -172
    },

    {
        3, -173, -173, -173, -173, -173, -173, -173, -173, -173,
     -173, -173, -173, -173,   75, -173,   75, -173, -173, -173,
     -173, -173,   75,   75,  248,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -173, -173,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -173, -173, -173
    },

    {
        3, -174, -174, -174, -174, -174, -174, -174, -174, -174,
     -174, -174, -174, -174,   75, -174,   75, -174, -174, -174,
     -174, -174,   75,   75,   75,   75,   75,   75,  249,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -174, -174,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -174, -174, -174

    },

    {
        3, -175, -175, -175, -175, -175, -175, -175, -175, -175,
     -175, -175, -175, -175,   75, -175,   75, -175, -175, -175,
     -175, -175,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -175, -175,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -175, -175, -175
    },

    {
        3, -176, -176, -176, -176, -176, -176, -176, -176, -176,
     -176, -176, -176, -176,   75, -176,   75, -176, -176, -176,

     -176, -176,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,  250,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -176, -176,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -176, -176, -176
    },

    {
        3, -177, -177, -177, -177, -177, -177, -177, -177, -177,
     -177, -177, -177, -177,   75, -177,   75, -177, -177, -177,
     -177, -177,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,  251, -177, -177,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -177, -177, -177
    },

    {
        3, -178, -178, -178, -178, -178, -178, -178, -178, -178,
     -178, -178, -178, -178,   75, -178,   75, -178, -178, -178,
     -178, -178,   75,   75,   75,   75,   75,   75,   75,   75,
      252,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -178, -178,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -178, -178, -178
    },

    {
        3, -179, -179, -179, -179, -179, -179, -179, -179, -179,
     -179, -179, -179, -179,   75, -179,   75, -179, -179, -179,
     -179, -179,   75,   75,   75,   75,  253,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -179, -179,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -179, -179, -179

    },

    {
        3, -180, -180, -180, -180, -180, -180, -180, -180, -180,
     -180, -180, -180, -180,   75, -180,   75, -180, -180, -180,
     -180, -180,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  254,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -180, -180,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -180, -180, -180
    },

    {
        3, -181, -181, -181, -181, -181, -181, -181, -181, -181,
     -181, -181, -181, -181,   75, -181,   75, -181, -181, -181,

     -181, -181,  255,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -181, -181,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -181, -181, -181
    },

    {
        3, -182, -182, -182, -182, -182, -182, -182, -182, -182,
     -182, -182, -182, -182,   75, -182,   75, -182, -182, -182,
     -182, -182,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,  256,   75,   75,   75,   75, -182, -182,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -182, -182, -182
    },

    {
        3, -183, -183, -183, -183, -183, -183, -183, -183, -183,
     -183, -183, -183, -183,   75, -183,   75, -183, -183, -183,
     -183, -183,   75,   75,   75,   75,  257,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -183, -183,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -183, -183, -183
    },

    {
        3, -184, -184, -184, -184, -184, -184, -184, -184, -184,
     -184, -184, -184, -184,   75, -184,   75, -184, -184, -184,
     -184, -184,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -184, -184,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -184, -184, -184

    },

    {
        3, -185, -185, -185, -185, -185, -185, -185, -185, -185,
     -185, -185, -185, -185,   75, -185,   75, -185, -185, -185,
     -185, -185,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,  258,   75,   75,
       75,   75,   75,   75,   75,   75, -185, -185,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -185, -185, -185
    },

    {
        3, -186, -186, -186, -186, -186, -186, -186, -186, -186,
     -186, -186, -186, -186,   75, -186,   75, -186, -186, -186,

     -186, -186,   75,   75,   75,   75,  259,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -186, -186,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -186, -186, -186
    },

    {
        3, -187, -187, -187, -187, -187, -187, -187, -187, -187,
     -187, -187, -187, -187,   75, -187,   75, -187, -187, -187,
     -187, -187,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  260,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -187, -187,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -187, -187, -187
    },

    {
        3, -188, -188, -188, -188, -188, -188, -188, -188, -188,
     -188, -188, -188, -188,   75, -188,   75, -188, -188, -188,
     -188, -188,   75,   75,   75,   75,   75,   75,   75,   75,
      261,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -188, -188,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -188, -188, -188
    },

    {
        3, -189, -189, -189, -189, -189, -189, -189, -189, -189,
     -189, -189, -189, -189,   75, -189,   75, -189, -189, -189,
     -189, -189,   75,  262,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -189, -189,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -189, -189, -189

    },

    {
        3, -190, -190, -190, -190, -190, -190, -190, -190, -190,
     -190, -190, -190, -190,   75, -190,   75, -190, -190, -190,
     -190, -190,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,  263,   75,
       75,   75,   75,   75,   75,   75, -190, -190,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -190, -190, -190
    },

    {
        3, -191, -191, -191, -191, -191, -191, -191, -191, -191,
     -191, -191, -191, -191,   75, -191,   75, -191, -191, -191,

     -191, -191,   75,   75,   75,   75,   75,   75,   75,  264,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -191, -191,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -191, -191, -191
    },

    {
        3, -192, -192, -192, -192, -192, -192, -192, -192, -192,
     -192, -192, -192, -192,   75, -192,   75, -192, -192, -192,
     -192, -192,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -192, -192,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -192, -192, -192
    },

    {
        3, -193, -193, -193, -193, -193, -193, -193, -193, -193,
     -193, -193, -193, -193,   75, -193,   75, -193, -193, -193,
     -193, -193,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -193, -193,   75,   75,
       75,   75,   75,  265,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -193, -193, -193
    },

    {
        3, -194, -194, -194, -194, -194, -194, -194, -194, -194,
     -194, -194, -194, -194,   75, -194,   75, -194, -194, -194,
     -194, -194,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -194, -194,   75,   75,
       75,  266,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -194, -194, -194

    },

    {
        3, -195, -195, -195, -195, -195, -195, -195, -195, -195,
     -195, -195, -195, -195,   75, -195,   75, -195, -195, -195,
     -195, -195,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -195, -195,   75,  267,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -195, -195, -195
    },

    {
        3, -196, -196, -196, -196, -196, -196, -196, -196, -196,
     -196, -196, -196, -196,   75, -196,   75, -196, -196, -196,

     -196, -196,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -196, -196,   75,   75,
       75,   75,   75,  268,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -196, -196, -196
    },

    {
        3, -197, -197, -197, -197, -197, -197, -197, -197, -197,
     -197, -197, -197, -197,   75, -197,   75, -197, -197, -197,
     -197, -197,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -197, -197,   75,   75,
       75,  233,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -197, -197, -197
    },

    {
        3, -198, -198, -198, -198, -198, -198, -198, -198, -198,
     -198, -198, -198, -198,   75, -198,   75, -198, -198, -198,
     -198, -198,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -198, -198,   75,  269,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -198, -198, -198
    },

    {
        3, -199, -199, -199, -199, -199, -199, -199, -199, -199,
     -199, -199, -199, -199,   75, -199,   75, -199, -199, -199,
     -199, -199,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -199, -199,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  270,   75,   75,   75,
       75,   75, -199, -199, -199

    },

    {
        3, -200, -200, -200, -200, -200, -200, -200, -200, -200,
     -200, -200, -200, -200,   75, -200,   75, -200, -200, -200,
     -200, -200,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -200, -200,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,  236,   75,   75,   75,   75,   75,   75,
       75,   75, -200, -200, -200
    },

    {
        3, -201, -201, -201, -201, -201, -201, -201, -201, -201,
     -201, -201, -201, -201,   75, -201,   75, -201, -201, -201,

     -201, -201,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -201, -201,   75,   75,
       75,   75,   75,  271,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -201, -201, -201
    },

    {
        3, -202, -202, -202, -202, -202, -202, -202, -202, -202,
     -202, -202, -202, -202,   75, -202,   75, -202, -202, -202,
     -202, -202,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -202, -202,   75,   75,
      272,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -202, -202, -202
    },

    {
        3, -203, -203, -203, -203, -203, -203, -203, -203, -203,
     -203, -203, -203, -203,   75, -203,   75, -203, -203, -203,
     -203, -203,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -203, -203,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,  273,   75,   75,   75,   75,
       75,   75, -203, -203, -203
    },

    {
        3, -204, -204, -204, -204, -204, -204, -204, -204, -204,
     -204, -204, -204, -204,   75, -204,   75, -204, -204, -204,
     -204, -204,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -204, -204,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,  274,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -204, -204, -204

    },

    {
        3, -205, -205, -205, -205, -205, -205, -205, -205, -205,
     -205, -205, -205, -205,   75, -205,   75, -205, -205, -205,
     -205, -205,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -205, -205,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,  275,   75,   75,   75,   75,
       75,   75, -205, -205, -205
    },

    {
        3, -206, -206, -206, -206, -206, -206, -206, -206, -206,
     -206, -206, -206, -206,   75, -206,   75, -206, -206, -206,

     -206, -206,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -206, -206,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
      242,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -206, -206, -206
    },

    {
        3, -207, -207, -207, -207, -207, -207, -207, -207, -207,
     -207, -207, -207, -207,   75, -207,   75, -207, -207, -207,
     -207, -207,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -207, -207,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,  276,   75,   75,   75,   75,   75,   75,
       75,   75, -207, -207, -207
    },

    {
        3, -208, -208, -208, -208, -208, -208, -208, -208, -208,
     -208, -208, -208, -208,   75, -208,   75, -208, -208, -208,
     -208, -208,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -208, -208,   75,   75,
       75,   75,   75,  277,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -208, -208, -208
    },

    {
        3, -209, -209, -209, -209, -209, -209, -209, -209, -209,
     -209, -209, -209, -209,   75, -209,   75, -209, -209, -209,
     -209, -209,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -209, -209,   75,   75,
       75,   75,   75,  278,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -209, -209, -209

    },

    {
        3, -210, -210, -210, -210, -210, -210, -210, -210, -210,
     -210, -210, -210, -210,   75, -210,   75, -210, -210, -210,
     -210, -210,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -210, -210,   75,   75,
       75,   75,   75,   75,   75,   75,   75,  279,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -210, -210, -210
    },

    {
        3, -211, -211, -211, -211, -211, -211, -211, -211, -211,
     -211, -211, -211, -211,   75, -211,   75, -211, -211, -211,

     -211, -211,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -211, -211,   75,   75,
       75,   75,  247,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -211, -211, -211
    },

    {
        3, -212, -212, -212, -212, -212, -212, -212, -212, -212,
     -212, -212, -212, -212,   75, -212,   75, -212, -212, -212,
     -212, -212,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -212, -212,   75,   75,
       75,  280,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -212, -212, -212
    },

    {
        3, -213, -213, -213, -213, -213, -213, -213, -213, -213,
     -213, -213, -213, -213,   75, -213,   75, -213, -213, -213,
     -213, -213,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -213, -213,   75,   75,
       75,   75,   75,   75,   75,  281,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -213, -213, -213
    },

    {
        3, -214, -214, -214, -214, -214, -214, -214, -214, -214,
     -214, -214, -214, -214,   75, -214,   75, -214, -214, -214,
     -214, -214,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -214, -214,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,  250,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -214, -214, -214

    },

    {
        3, -215, -215, -215, -215, -215, -215, -215, -215, -215,
     -215, -215, -215, -215,   75, -215,   75, -215, -215, -215,
     -215, -215,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -215, -215,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,  251, -215, -215, -215
    },

    {
        3, -216, -216, -216, -216, -216, -216, -216, -216, -216,
     -216, -216, -216, -216,   75, -216,   75, -216, -216, -216,

     -216, -216,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -216, -216,   75,   75,
       75,   75,   75,   75,   75,   75,   75,  282,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -216, -216, -216
    },

    {
        3, -217, -217, -217, -217, -217, -217, -217, -217, -217,
     -217, -217, -217, -217,   75, -217,   75, -217, -217, -217,
     -217, -217,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -217, -217,   75,   75,
       75,   75,   75,  283,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -217, -217, -217
    },

    {
        3, -218, -218, -218, -218, -218, -218, -218, -218, -218,
     -218, -218, -218, -218,   75, -218,   75, -218, -218, -218,
     -218, -218,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -218, -218,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,  284,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -218, -218, -218
    },

    {
        3, -219, -219, -219, -219, -219, -219, -219, -219, -219,
     -219, -219, -219, -219,   75, -219,   75, -219, -219, -219,
     -219, -219,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -219, -219,   75,  285,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -219, -219, -219

    },

    {
        3, -220, -220, -220, -220, -220, -220, -220, -220, -220,
     -220, -220, -220, -220,   75, -220,   75, -220, -220, -220,
     -220, -220,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -220, -220,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,  286,   75,   75,
       75,   75, -220, -220, -220
    },

    {
        3, -221, -221, -221, -221, -221, -221, -221, -221, -221,
     -221, -221, -221, -221,   75, -221,   75, -221, -221, -221,

     -221, -221,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -221, -221,   75,   75,
       75,   75,   75,  287,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -221, -221, -221
    },

    {
        3, -222, -222, -222, -222, -222, -222, -222, -222, -222,
     -222, -222, -222, -222,   75, -222,   75, -222, -222, -222,
     -222, -222,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -222, -222,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,  258,   75,   75,   75,   75,   75,   75,
       75,   75, -222, -222, -222
    },

    {
        3, -223, -223, -223, -223, -223, -223, -223, -223, -223,
     -223, -223, -223, -223,   75, -223,   75, -223, -223, -223,
     -223, -223,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -223, -223,   75,   75,
       75,   75,   75,  259,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -223, -223, -223
    },

    {
        3, -224, -224, -224, -224, -224, -224, -224, -224, -224,
     -224, -224, -224, -224,   75, -224,   75, -224, -224, -224,
     -224, -224,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -224, -224,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  288,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -224, -224, -224

    },

    {
        3, -225, -225, -225, -225, -225, -225, -225, -225, -225,
     -225, -225, -225, -225,   75, -225,   75, -225, -225, -225,
     -225, -225,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -225, -225,   75,   75,
       75,   75,   75,   75,   75,   75,   75,  289,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -225, -225, -225
    },

    {
        3, -226, -226, -226, -226, -226, -226, -226, -226, -226,
     -226, -226, -226, -226,   75, -226,   75, -226, -226, -226,

     -226, -226,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -226, -226,   75,   75,
      290,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -226, -226, -226
    },

    {
        3, -227, -227, -227, -227, -227, -227, -227, -227, -227,
     -227, -227, -227, -227,   75, -227,   75, -227, -227, -227,
     -227, -227,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -227, -227,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,  291,   75,   75,   75,   75,   75,
       75,   75, -227, -227, -227
    },

    {
        3, -228, -228, -228, -228, -228, -228, -228, -228, -228,
     -228, -228, -228, -228,   75, -228,   75, -228, -228, -228,
     -228, -228,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -228, -228,   75,   75,
       75,   75,   75,   75,   75,   75,  264,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -228, -228, -228
    },

    {
        3, -229, -229, -229, -229, -229, -229, -229, -229, -229,
     -229, -229, -229, -229,   75, -229,   75, -229, -229, -229,
     -229, -229,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,  292,   75,
       75,   75,   75,   75,   75,   75, -229, -229,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -229, -229, -229

    },

    {
        3, -230, -230, -230, -230, -230, -230, -230, -230, -230,
     -230, -230, -230, -230,   75, -230,   75, -230, -230, -230,
     -230, -230,  293,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -230, -230,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -230, -230, -230
    },

    {
        3, -231, -231, -231, -231, -231, -231, -231, -231, -231,
     -231, -231, -231, -231,   75, -231,   75, -231, -231, -231,

     -231, -231,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
      294,   75,   75,   75,   75,   75, -231, -231,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -231, -231, -231
    },

    {
        3, -232, -232, -232, -232, -232, -232, -232, -232, -232,
     -232, -232, -232, -232,   75, -232,   75, -232, -232, -232,
     -232, -232,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

      295,   75,   75,   75,   75,   75, -232, -232,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -232, -232, -232
    },

    {
        3, -233, -233, -233, -233, -233, -233, -233, -233, -233,
     -233, -233, -233, -233,   75, -233,   75, -233, -233, -233,
     -233, -233,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -233, -233,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -233, -233, -233
    },

    {
        3, -234, -234, -234, -234, -234, -234, -234, -234, -234,
     -234, -234, -234, -234,   75, -234,   75, -234, -234, -234,
     -234, -234,   75,   75,  296,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -234, -234,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -234, -234, -234

    },

    {
        3, -235, -235, -235, -235, -235, -235, -235, -235, -235,
     -235, -235, -235, -235,   75, -235,   75, -235, -235, -235,
     -235, -235,   75,   75,   75,   75,   75,   75,   75,   75,
      297,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -235, -235,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -235, -235, -235
    },

    {
        3, -236, -236, -236, -236, -236, -236, -236, -236, -236,
     -236, -236, -236, -236,   75, -236,   75, -236, -236, -236,

     -236, -236,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -236, -236,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -236, -236, -236
    },

    {
        3, -237, -237, -237, -237, -237, -237, -237, -237, -237,
     -237, -237, -237, -237,   75, -237,   75, -237, -237, -237,
     -237, -237,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,  298,

       75,   75,   75,   75,   75,   75, -237, -237,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -237, -237, -237
    },

    {
        3, -238, -238, -238, -238, -238, -238, -238, -238, -238,
     -238, -238, -238, -238,   75, -238,   75, -238, -238, -238,
     -238, -238,   75,   75,   75,   75,  299,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -238, -238,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -238, -238, -238
    },

    {
        3, -239, -239, -239, -239, -239, -239, -239, -239, -239,
     -239, -239, -239, -239,   75, -239,   75, -239, -239, -239,
     -239, -239,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
      300,   75,   75,   75,   75,   75, -239, -239,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -239, -239, -239

    },

    {
        3, -240, -240, -240, -240, -240, -240, -240, -240, -240,
     -240, -240, -240, -240,   75, -240,   75, -240, -240, -240,
     -240, -240,  301,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -240, -240,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -240, -240, -240
    },

    {
        3, -241, -241, -241, -241, -241, -241, -241, -241, -241,
     -241, -241, -241, -241,   75, -241,   75, -241, -241, -241,

     -241, -241,   75,   75,   75,   75,  302,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -241, -241,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -241, -241, -241
    },

    {
        3, -242, -242, -242, -242, -242, -242, -242, -242, -242,
     -242, -242, -242, -242,   75, -242,   75, -242, -242, -242,
     -242, -242,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -242, -242,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -242, -242, -242
    },

    {
        3, -243, -243, -243, -243, -243, -243, -243, -243, -243,
     -243, -243, -243, -243,   75, -243,   75, -243, -243, -243,
     -243, -243,   75,   75,   75,   75,   75,   75,   75,  303,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -243, -243,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -243, -243, -243
    },

    {
        3, -244, -244, -244, -244, -244, -244, -244, -244, -244,
     -244, -244, -244, -244,   75, -244,   75, -244, -244, -244,
     -244, -244,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,  304,   75,
       75,   75,   75,   75,   75,   75, -244, -244,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -244, -244, -244

    },

    {
        3, -245, -245, -245, -245, -245, -245, -245, -245, -245,
     -245, -245, -245, -245,   75, -245,   75, -245, -245, -245,
     -245, -245,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,  305,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -245, -245,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -245, -245, -245
    },

    {
        3, -246, -246, -246, -246, -246, -246, -246, -246, -246,
     -246, -246, -246, -246,   75, -246,   75, -246, -246, -246,

     -246, -246,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
      306,   75,   75,   75,   75,   75, -246, -246,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -246, -246, -246
    },

    {
        3, -247, -247, -247, -247, -247, -247, -247, -247, -247,
     -247, -247, -247, -247,   75, -247,   75, -247, -247, -247,
     -247, -247,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -247, -247,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -247, -247, -247
    },

    {
        3, -248, -248, -248, -248, -248, -248, -248, -248, -248,
     -248, -248, -248, -248,   75, -248,   75, -248, -248, -248,
     -248, -248,   75,   75,   75,   75,   75,   75,   75,  307,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -248, -248,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -248, -248, -248
    },

    {
        3, -249, -249, -249, -249, -249, -249, -249, -249, -249,
     -249, -249, -249, -249,   75, -249,   75, -249, -249, -249,
     -249, -249,   75,   75,   75,   75,  308,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -249, -249,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -249, -249, -249

    },

    {
        3, -250, -250, -250, -250, -250, -250, -250, -250, -250,
     -250, -250, -250, -250,   75, -250,   75, -250, -250, -250,
     -250, -250,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -250, -250,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -250, -250, -250
    },

    {
        3, -251, -251, -251, -251, -251, -251, -251, -251, -251,
     -251, -251, -251, -251,   75, -251,   75, -251, -251, -251,

     -251, -251,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -251, -251,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -251, -251, -251
    },

    {
        3, -252, -252, -252, -252, -252, -252, -252, -252, -252,
     -252, -252, -252, -252,   75, -252,   75, -252, -252, -252,
     -252, -252,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  309,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -252, -252,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -252, -252, -252
    },

    {
        3, -253, -253, -253, -253, -253, -253, -253, -253, -253,
     -253, -253, -253, -253,   75, -253,   75, -253, -253, -253,
     -253, -253,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,  310,   75,
       75,   75,   75,   75,   75,   75, -253, -253,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -253, -253, -253
    },

    {
        3, -254, -254, -254, -254, -254, -254, -254, -254, -254,
     -254, -254, -254, -254,   75, -254,   75, -254, -254, -254,
     -254, -254,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  311,   75,   75,   75, -254, -254,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -254, -254, -254

    },

    {
        3, -255, -255, -255, -255, -255, -255, -255, -255, -255,
     -255, -255, -255, -255,   75, -255,   75, -255, -255, -255,
     -255, -255,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,  312,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -255, -255,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -255, -255, -255
    },

    {
        3, -256, -256, -256, -256, -256, -256, -256, -256, -256,
     -256, -256, -256, -256,   75, -256,   75, -256, -256, -256,

     -256, -256,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,  313,   75,
       75,   75,   75,   75,   75,   75, -256, -256,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -256, -256, -256
    },

    {
        3, -257, -257, -257, -257, -257, -257, -257, -257, -257,
     -257, -257, -257, -257,   75, -257,   75, -257, -257, -257,
     -257, -257,   75,   75,  314,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -257, -257,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -257, -257, -257
    },

    {
        3, -258, -258, -258, -258, -258, -258, -258, -258, -258,
     -258, -258, -258, -258,   75, -258,   75, -258, -258, -258,
     -258, -258,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -258, -258,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -258, -258, -258
    },

    {
        3, -259, -259, -259, -259, -259, -259, -259, -259, -259,
     -259, -259, -259, -259,   75, -259,   75, -259, -259, -259,
     -259, -259,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -259, -259,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -259, -259, -259

    },

    {
        3, -260, -260, -260, -260, -260, -260, -260, -260, -260,
     -260, -260, -260, -260,   75, -260,   75, -260, -260, -260,
     -260, -260,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,  315,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -260, -260,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -260, -260, -260
    },

    {
        3, -261, -261, -261, -261, -261, -261, -261, -261, -261,
     -261, -261, -261, -261,   75, -261,   75, -261, -261, -261,

     -261, -261,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,  316,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -261, -261,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -261, -261, -261
    },

    {
        3, -262, -262, -262, -262, -262, -262, -262, -262, -262,
     -262, -262, -262, -262,   75, -262,   75, -262, -262, -262,
     -262, -262,   75,   75,   75,   75,  317,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -262, -262,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -262, -262, -262
    },

    {
        3, -263, -263, -263, -263, -263, -263, -263, -263, -263,
     -263, -263, -263, -263,   75, -263,   75, -263, -263, -263,
     -263, -263,   75,   75,   75,   75,  318,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -263, -263,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -263, -263, -263
    },

    {
        3, -264, -264, -264, -264, -264, -264, -264, -264, -264,
     -264, -264, -264, -264,   75, -264,   75, -264, -264, -264,
     -264, -264,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -264, -264,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -264, -264, -264

    },

    {
        3, -265, -265, -265, -265, -265, -265, -265, -265, -265,
     -265, -265, -265, -265,   75, -265,   75, -265, -265, -265,
     -265, -265,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -265, -265,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,  292,   75,   75,   75,   75,   75,
       75,   75, -265, -265, -265
    },

    {
        3, -266, -266, -266, -266, -266, -266, -266, -266, -266,
     -266, -266, -266, -266,   75, -266,   75, -266, -266, -266,

     -266, -266,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -266, -266,   75,  319,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -266, -266, -266
    },

    {
        3, -267, -267, -267, -267, -267, -267, -267, -267, -267,
     -267, -267, -267, -267,   75, -267,   75, -267, -267, -267,
     -267, -267,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -267, -267,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  320,   75,   75,   75,
       75,   75, -267, -267, -267
    },

    {
        3, -268, -268, -268, -268, -268, -268, -268, -268, -268,
     -268, -268, -268, -268,   75, -268,   75, -268, -268, -268,
     -268, -268,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -268, -268,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,  321,   75,   75,   75,
       75,   75, -268, -268, -268
    },

    {
        3, -269, -269, -269, -269, -269, -269, -269, -269, -269,
     -269, -269, -269, -269,   75, -269,   75, -269, -269, -269,
     -269, -269,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -269, -269,   75,   75,
       75,  322,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -269, -269, -269

    },

    {
        3, -270, -270, -270, -270, -270, -270, -270, -270, -270,
     -270, -270, -270, -270,   75, -270,   75, -270, -270, -270,
     -270, -270,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -270, -270,   75,   75,
       75,   75,   75,   75,   75,   75,   75,  323,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -270, -270, -270
    },

    {
        3, -271, -271, -271, -271, -271, -271, -271, -271, -271,
     -271, -271, -271, -271,   75, -271,   75, -271, -271, -271,

     -271, -271,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -271, -271,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,  298,   75,   75,   75,   75,
       75,   75, -271, -271, -271
    },

    {
        3, -272, -272, -272, -272, -272, -272, -272, -272, -272,
     -272, -272, -272, -272,   75, -272,   75, -272, -272, -272,
     -272, -272,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -272, -272,   75,   75,
       75,   75,   75,  324,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -272, -272, -272
    },

    {
        3, -273, -273, -273, -273, -273, -273, -273, -273, -273,
     -273, -273, -273, -273,   75, -273,   75, -273, -273, -273,
     -273, -273,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -273, -273,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,  325,   75,   75,   75,
       75,   75, -273, -273, -273
    },

    {
        3, -274, -274, -274, -274, -274, -274, -274, -274, -274,
     -274, -274, -274, -274,   75, -274,   75, -274, -274, -274,
     -274, -274,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -274, -274,   75,  326,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -274, -274, -274

    },

    {
        3, -275, -275, -275, -275, -275, -275, -275, -275, -275,
     -275, -275, -275, -275,   75, -275,   75, -275, -275, -275,
     -275, -275,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -275, -275,   75,   75,
       75,   75,   75,  302,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -275, -275, -275
    },

    {
        3, -276, -276, -276, -276, -276, -276, -276, -276, -276,
     -276, -276, -276, -276,   75, -276,   75, -276, -276, -276,

     -276, -276,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -276, -276,   75,   75,
       75,   75,   75,   75,   75,   75,  303,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -276, -276, -276
    },

    {
        3, -277, -277, -277, -277, -277, -277, -277, -277, -277,
     -277, -277, -277, -277,   75, -277,   75, -277, -277, -277,
     -277, -277,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -277, -277,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,  327,   75,   75,   75,   75,   75,
       75,   75, -277, -277, -277
    },

    {
        3, -278, -278, -278, -278, -278, -278, -278, -278, -278,
     -278, -278, -278, -278,   75, -278,   75, -278, -278, -278,
     -278, -278,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -278, -278,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,  328,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -278, -278, -278
    },

    {
        3, -279, -279, -279, -279, -279, -279, -279, -279, -279,
     -279, -279, -279, -279,   75, -279,   75, -279, -279, -279,
     -279, -279,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -279, -279,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  306,   75,   75,   75,
       75,   75, -279, -279, -279

    },

    {
        3, -280, -280, -280, -280, -280, -280, -280, -280, -280,
     -280, -280, -280, -280,   75, -280,   75, -280, -280, -280,
     -280, -280,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -280, -280,   75,   75,
       75,   75,   75,   75,   75,   75,  307,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -280, -280, -280
    },

    {
        3, -281, -281, -281, -281, -281, -281, -281, -281, -281,
     -281, -281, -281, -281,   75, -281,   75, -281, -281, -281,

     -281, -281,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -281, -281,   75,   75,
       75,   75,   75,  308,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -281, -281, -281
    },

    {
        3, -282, -282, -282, -282, -282, -282, -282, -282, -282,
     -282, -282, -282, -282,   75, -282,   75, -282, -282, -282,
     -282, -282,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -282, -282,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,  329,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -282, -282, -282
    },

    {
        3, -283, -283, -283, -283, -283, -283, -283, -283, -283,
     -283, -283, -283, -283,   75, -283,   75, -283, -283, -283,
     -283, -283,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -283, -283,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,  310,   75,   75,   75,   75,   75,
       75,   75, -283, -283, -283
    },

    {
        3, -284, -284, -284, -284, -284, -284, -284, -284, -284,
     -284, -284, -284, -284,   75, -284,   75, -284, -284, -284,
     -284, -284,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -284, -284,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,  330,   75,
       75,   75, -284, -284, -284

    },

    {
        3, -285, -285, -285, -285, -285, -285, -285, -285, -285,
     -285, -285, -285, -285,   75, -285,   75, -285, -285, -285,
     -285, -285,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -285, -285,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
      331,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -285, -285, -285
    },

    {
        3, -286, -286, -286, -286, -286, -286, -286, -286, -286,
     -286, -286, -286, -286,   75, -286,   75, -286, -286, -286,

     -286, -286,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -286, -286,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,  332,   75,   75,   75,   75,   75,
       75,   75, -286, -286, -286
    },

    {
        3, -287, -287, -287, -287, -287, -287, -287, -287, -287,
     -287, -287, -287, -287,   75, -287,   75, -287, -287, -287,
     -287, -287,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -287, -287,   75,   75,
       75,  333,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -287, -287, -287
    },

    {
        3, -288, -288, -288, -288, -288, -288, -288, -288, -288,
     -288, -288, -288, -288,   75, -288,   75, -288, -288, -288,
     -288, -288,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -288, -288,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,  315,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -288, -288, -288
    },

    {
        3, -289, -289, -289, -289, -289, -289, -289, -289, -289,
     -289, -289, -289, -289,   75, -289,   75, -289, -289, -289,
     -289, -289,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -289, -289,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,  334,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -289, -289, -289

    },

    {
        3, -290, -290, -290, -290, -290, -290, -290, -290, -290,
     -290, -290, -290, -290,   75, -290,   75, -290, -290, -290,
     -290, -290,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -290, -290,   75,   75,
       75,   75,   75,  335,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -290, -290, -290
    },

    {
        3, -291, -291, -291, -291, -291, -291, -291, -291, -291,
     -291, -291, -291, -291,   75, -291,   75, -291, -291, -291,

     -291, -291,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -291, -291,   75,   75,
       75,   75,   75,  318,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -291, -291, -291
    },

    {
        3, -292, -292, -292, -292, -292, -292, -292, -292, -292,
     -292, -292, -292, -292,   75, -292,   75, -292, -292, -292,
     -292, -292,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -292, -292,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -292, -292, -292
    },

    {
        3, -293, -293, -293, -293, -293, -293, -293, -293, -293,
     -293, -293, -293, -293,   75, -293,   75, -293, -293, -293,
     -293, -293,   75,   75,   75,  336,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -293, -293,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -293, -293, -293
    },

    {
        3, -294, -294, -294, -294, -294, -294, -294, -294, -294,
     -294, -294, -294, -294,   75, -294,   75, -294, -294, -294,
     -294, -294,   75,   75,   75,   75,  337,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -294, -294,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -294, -294, -294

    },

    {
        3, -295, -295, -295, -295, -295, -295, -295, -295, -295,
     -295, -295, -295, -295,   75, -295,   75, -295, -295, -295,
     -295, -295,   75,   75,   75,   75,  338,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -295, -295,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -295, -295, -295
    },

    {
        3, -296, -296, -296, -296, -296, -296, -296, -296, -296,
     -296, -296, -296, -296,   75, -296,   75, -296, -296, -296,

     -296, -296,   75,   75,   75,   75,   75,   75,   75,  339,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -296, -296,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -296, -296, -296
    },

    {
        3, -297, -297, -297, -297, -297, -297, -297, -297, -297,
     -297, -297, -297, -297,   75, -297,   75, -297, -297, -297,
     -297, -297,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,  340,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -297, -297,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -297, -297, -297
    },

    {
        3, -298, -298, -298, -298, -298, -298, -298, -298, -298,
     -298, -298, -298, -298,   75, -298,   75, -298, -298, -298,
     -298, -298,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -298, -298,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -298, -298, -298
    },

    {
        3, -299, -299, -299, -299, -299, -299, -299, -299, -299,
     -299, -299, -299, -299,   75, -299,   75, -299, -299, -299,
     -299, -299,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,  341,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -299, -299,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -299, -299, -299

    },

    {
        3, -300, -300, -300, -300, -300, -300, -300, -300, -300,
     -300, -300, -300, -300,   75, -300,   75, -300, -300, -300,
     -300, -300,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,  342,
       75,   75,   75,   75,   75,   75, -300, -300,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -300, -300, -300
    },

    {
        3, -301, -301, -301, -301, -301, -301, -301, -301, -301,
     -301, -301, -301, -301,   75, -301,   75, -301, -301, -301,

     -301, -301,   75,   75,   75,   75,   75,   75,   75,   75,
      343,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -301, -301,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -301, -301, -301
    },

    {
        3, -302, -302, -302, -302, -302, -302, -302, -302, -302,
     -302, -302, -302, -302,   75, -302,   75, -302, -302, -302,
     -302, -302,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -302, -302,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -302, -302, -302
    },

    {
        3, -303, -303, -303, -303, -303, -303, -303, -303, -303,
     -303, -303, -303, -303,   75, -303,   75, -303, -303, -303,
     -303, -303,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -303, -303,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -303, -303, -303
    },

    {
        3, -304, -304, -304, -304, -304, -304, -304, -304, -304,
     -304, -304, -304, -304,   75, -304,   75, -304, -304, -304,
     -304, -304,   75,   75,   75,   75,   75,   75,   75,   75,
      344,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -304, -304,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -304, -304, -304

    },

    {
        3, -305, -305, -305, -305, -305, -305, -305, -305, -305,
     -305, -305, -305, -305,   75, -305,   75, -305, -305, -305,
     -305, -305,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,  345,
       75,   75,   75,   75,   75,   75, -305, -305,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -305, -305, -305
    },

    {
        3, -306, -306, -306, -306, -306, -306, -306, -306, -306,
     -306, -306, -306, -306,   75, -306,   75, -306, -306, -306,

     -306, -306,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -306, -306,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -306, -306, -306
    },

    {
        3, -307, -307, -307, -307, -307, -307, -307, -307, -307,
     -307, -307, -307, -307,   75, -307,   75, -307, -307, -307,
     -307, -307,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -307, -307,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -307, -307, -307
    },

    {
        3, -308, -308, -308, -308, -308, -308, -308, -308, -308,
     -308, -308, -308, -308,   75, -308,   75, -308, -308, -308,
     -308, -308,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -308, -308,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -308, -308, -308
    },

    {
        3, -309, -309, -309, -309, -309, -309, -309, -309, -309,
     -309, -309, -309, -309,   75, -309,   75, -309, -309, -309,
     -309, -309,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,  346,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -309, -309,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -309, -309, -309

    },

    {
        3, -310, -310, -310, -310, -310, -310, -310, -310, -310,
     -310, -310, -310, -310,   75, -310,   75, -310, -310, -310,
     -310, -310,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -310, -310,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -310, -310, -310
    },

    {
        3, -311, -311, -311, -311, -311, -311, -311, -311, -311,
     -311, -311, -311, -311,   75, -311,   75, -311, -311, -311,

     -311, -311,   75,   75,   75,   75,  347,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -311, -311,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -311, -311, -311
    },

    {
        3, -312, -312, -312, -312, -312, -312, -312, -312, -312,
     -312, -312, -312, -312,   75, -312,   75, -312, -312, -312,
     -312, -312,   75,   75,   75,   75,  348,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -312, -312,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -312, -312, -312
    },

    {
        3, -313, -313, -313, -313, -313, -313, -313, -313, -313,
     -313, -313, -313, -313,   75, -313,   75, -313, -313, -313,
     -313, -313,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,  349,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -313, -313,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -313, -313, -313
    },

    {
        3, -314, -314, -314, -314, -314, -314, -314, -314, -314,
     -314, -314, -314, -314,   75, -314,   75, -314, -314, -314,
     -314, -314,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
      350,   75,   75,   75,   75,   75, -314, -314,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -314, -314, -314

    },

    {
        3, -315, -315, -315, -315, -315, -315, -315, -315, -315,
     -315, -315, -315, -315,   75, -315,   75, -315, -315, -315,
     -315, -315,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -315, -315,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -315, -315, -315
    },

    {
        3, -316, -316, -316, -316, -316, -316, -316, -316, -316,
     -316, -316, -316, -316,   75, -316,   75, -316, -316, -316,

     -316, -316,   75,   75,   75,  351,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -316, -316,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -316, -316, -316
    },

    {
        3, -317, -317, -317, -317, -317, -317, -317, -317, -317,
     -317, -317, -317, -317,   75, -317,   75, -317, -317, -317,
     -317, -317,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,  352,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -317, -317,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -317, -317, -317
    },

    {
        3, -318, -318, -318, -318, -318, -318, -318, -318, -318,
     -318, -318, -318, -318,   75, -318,   75, -318, -318, -318,
     -318, -318,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -318, -318,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -318, -318, -318
    },

    {
        3, -319, -319, -319, -319, -319, -319, -319, -319, -319,
     -319, -319, -319, -319,   75, -319,   75, -319, -319, -319,
     -319, -319,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -319, -319,   75,   75,
       75,   75,  353,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -319, -319, -319

    },

    {
        3, -320, -320, -320, -320, -320, -320, -320, -320, -320,
     -320, -320, -320, -320,   75, -320,   75, -320, -320, -320,
     -320, -320,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -320, -320,   75,   75,
       75,   75,   75,  337,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -320, -320, -320
    },

    {
        3, -321, -321, -321, -321, -321, -321, -321, -321, -321,
     -321, -321, -321, -321,   75, -321,   75, -321, -321, -321,

     -321, -321,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -321, -321,   75,   75,
       75,   75,   75,  338,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -321, -321, -321
    },

    {
        3, -322, -322, -322, -322, -322, -322, -322, -322, -322,
     -322, -322, -322, -322,   75, -322,   75, -322, -322, -322,
     -322, -322,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -322, -322,   75,   75,
       75,   75,   75,   75,   75,   75,  339,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -322, -322, -322
    },

    {
        3, -323, -323, -323, -323, -323, -323, -323, -323, -323,
     -323, -323, -323, -323,   75, -323,   75, -323, -323, -323,
     -323, -323,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -323, -323,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,  354,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -323, -323, -323
    },

    {
        3, -324, -324, -324, -324, -324, -324, -324, -324, -324,
     -324, -324, -324, -324,   75, -324,   75, -324, -324, -324,
     -324, -324,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -324, -324,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,  341,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -324, -324, -324

    },

    {
        3, -325, -325, -325, -325, -325, -325, -325, -325, -325,
     -325, -325, -325, -325,   75, -325,   75, -325, -325, -325,
     -325, -325,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -325, -325,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,  342,   75,   75,   75,   75,
       75,   75, -325, -325, -325
    },

    {
        3, -326, -326, -326, -326, -326, -326, -326, -326, -326,
     -326, -326, -326, -326,   75, -326,   75, -326, -326, -326,

     -326, -326,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -326, -326,   75,   75,
       75,   75,   75,   75,   75,   75,   75,  355,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -326, -326, -326
    },

    {
        3, -327, -327, -327, -327, -327, -327, -327, -327, -327,
     -327, -327, -327, -327,   75, -327,   75, -327, -327, -327,
     -327, -327,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -327, -327,   75,   75,
       75,   75,   75,   75,   75,   75,   75,  356,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -327, -327, -327
    },

    {
        3, -328, -328, -328, -328, -328, -328, -328, -328, -328,
     -328, -328, -328, -328,   75, -328,   75, -328, -328, -328,
     -328, -328,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -328, -328,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,  345,   75,   75,   75,   75,
       75,   75, -328, -328, -328
    },

    {
        3, -329, -329, -329, -329, -329, -329, -329, -329, -329,
     -329, -329, -329, -329,   75, -329,   75, -329, -329, -329,
     -329, -329,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -329, -329,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,  357,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -329, -329, -329

    },

    {
        3, -330, -330, -330, -330, -330, -330, -330, -330, -330,
     -330, -330, -330, -330,   75, -330,   75, -330, -330, -330,
     -330, -330,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -330, -330,   75,   75,
       75,   75,   75,  347,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -330, -330, -330
    },

    {
        3, -331, -331, -331, -331, -331, -331, -331, -331, -331,
     -331, -331, -331, -331,   75, -331,   75, -331, -331, -331,

     -331, -331,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -331, -331,   75,   75,
       75,   75,   75,  348,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -331, -331, -331
    },

    {
        3, -332, -332, -332, -332, -332, -332, -332, -332, -332,
     -332, -332, -332, -332,   75, -332,   75, -332, -332, -332,
     -332, -332,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -332, -332,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,  349,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -332, -332, -332
    },

    {
        3, -333, -333, -333, -333, -333, -333, -333, -333, -333,
     -333, -333, -333, -333,   75, -333,   75, -333, -333, -333,
     -333, -333,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -333, -333,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,  350,   75,   75,   75,
       75,   75, -333, -333, -333
    },

    {
        3, -334, -334, -334, -334, -334, -334, -334, -334, -334,
     -334, -334, -334, -334,   75, -334,   75, -334, -334, -334,
     -334, -334,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -334, -334,   75,   75,
       75,   75,  351,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -334, -334, -334

    },

    {
        3, -335, -335, -335, -335, -335, -335, -335, -335, -335,
     -335, -335, -335, -335,   75, -335,   75, -335, -335, -335,
     -335, -335,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -335, -335,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,  352,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -335, -335, -335
    },

    {
        3, -336, -336, -336, -336, -336, -336, -336, -336, -336,
     -336, -336, -336, -336,   75, -336,   75, -336, -336, -336,

     -336, -336,   75,   75,   75,   75,  358,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -336, -336,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -336, -336, -336
    },

    {
        3, -337, -337, -337, -337, -337, -337, -337, -337, -337,
     -337, -337, -337, -337,   75, -337,   75, -337, -337, -337,
     -337, -337,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -337, -337,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -337, -337, -337
    },

    {
        3, -338, -338, -338, -338, -338, -338, -338, -338, -338,
     -338, -338, -338, -338,   75, -338,   75, -338, -338, -338,
     -338, -338,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -338, -338,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -338, -338, -338
    },

    {
        3, -339, -339, -339, -339, -339, -339, -339, -339, -339,
     -339, -339, -339, -339,   75, -339,   75, -339, -339, -339,
     -339, -339,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -339, -339,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -339, -339, -339

    },

    {
        3, -340, -340, -340, -340, -340, -340, -340, -340, -340,
     -340, -340, -340, -340,   75, -340,   75, -340, -340, -340,
     -340, -340,   75,   75,  359,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -340, -340,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -340, -340, -340
    },

    {
        3, -341, -341, -341, -341, -341, -341, -341, -341, -341,
     -341, -341, -341, -341,   75, -341,   75, -341, -341, -341,

     -341, -341,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -341, -341,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -341, -341, -341
    },

    {
        3, -342, -342, -342, -342, -342, -342, -342, -342, -342,
     -342, -342, -342, -342,   75, -342,   75, -342, -342, -342,
     -342, -342,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -342, -342,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -342, -342, -342
    },

    {
        3, -343, -343, -343, -343, -343, -343, -343, -343, -343,
     -343, -343, -343, -343,   75, -343,   75, -343, -343, -343,
     -343, -343,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,  360,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -343, -343,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -343, -343, -343
    },

    {
        3, -344, -344, -344, -344, -344, -344, -344, -344, -344,
     -344, -344, -344, -344,   75, -344,   75, -344, -344, -344,
     -344, -344,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
      361,   75,   75,   75,   75,   75, -344, -344,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -344, -344, -344

    },

    {
        3, -345, -345, -345, -345, -345, -345, -345, -345, -345,
     -345, -345, -345, -345,   75, -345,   75, -345, -345, -345,
     -345, -345,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -345, -345,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -345, -345, -345
    },

    {
        3, -346, -346, -346, -346, -346, -346, -346, -346, -346,
     -346, -346, -346, -346,   75, -346,   75, -346, -346, -346,

     -346, -346,  362,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -346, -346,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -346, -346, -346
    },

    {
        3, -347, -347, -347, -347, -347, -347, -347, -347, -347,
     -347, -347, -347, -347,   75, -347,   75, -347, -347, -347,
     -347, -347,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -347, -347,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -347, -347, -347
    },

    {
        3, -348, -348, -348, -348, -348, -348, -348, -348, -348,
     -348, -348, -348, -348,   75, -348,   75, -348, -348, -348,
     -348, -348,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -348, -348,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -348, -348, -348
    },

    {
        3, -349, -349, -349, -349, -349, -349, -349, -349, -349,
     -349, -349, -349, -349,   75, -349,   75, -349, -349, -349,
     -349, -349,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -349, -349,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -349, -349, -349

    },

    {
        3, -350, -350, -350, -350, -350, -350, -350, -350, -350,
     -350, -350, -350, -350,   75, -350,   75, -350, -350, -350,
     -350, -350,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -350, -350,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -350, -350, -350
    },

    {
        3, -351, -351, -351, -351, -351, -351, -351, -351, -351,
     -351, -351, -351, -351,   75, -351,   75, -351, -351, -351,

     -351, -351,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -351, -351,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -351, -351, -351
    },

    {
        3, -352, -352, -352, -352, -352, -352, -352, -352, -352,
     -352, -352, -352, -352,   75, -352,   75, -352, -352, -352,
     -352, -352,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -352, -352,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -352, -352, -352
    },

    {
        3, -353, -353, -353, -353, -353, -353, -353, -353, -353,
     -353, -353, -353, -353,   75, -353,   75, -353, -353, -353,
     -353, -353,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -353, -353,   75,   75,
       75,   75,   75,  358,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -353, -353, -353
    },

    {
        3, -354, -354, -354, -354, -354, -354, -354, -354, -354,
     -354, -354, -354, -354,   75, -354,   75, -354, -354, -354,
     -354, -354,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -354, -354,   75,   75,
       75,  363,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -354, -354, -354

    },

    {
        3, -355, -355, -355, -355, -355, -355, -355, -355, -355,
     -355, -355, -355, -355,   75, -355,   75, -355, -355, -355,
     -355, -355,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -355, -355,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,  360,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -355, -355, -355
    },

    {
        3, -356, -356, -356, -356, -356, -356, -356, -356, -356,
     -356, -356, -356, -356,   75, -356,   75, -356, -356, -356,

     -356, -356,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -356, -356,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,  364,   75,   75,   75,
       75,   75, -356, -356, -356
    },

    {
        3, -357, -357, -357, -357, -357, -357, -357, -357, -357,
     -357, -357, -357, -357,   75, -357,   75, -357, -357, -357,
     -357, -357,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -357, -357,   75,  365,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -357, -357, -357
    },

    {
        3, -358, -358, -358, -358, -358, -358, -358, -358, -358,
     -358, -358, -358, -358,   75, -358,   75, -358, -358, -358,
     -358, -358,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -358, -358,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -358, -358, -358
    },

    {
        3, -359, -359, -359, -359, -359, -359, -359, -359, -359,
     -359, -359, -359, -359,   75, -359,   75, -359, -359, -359,
     -359, -359,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
      366,   75,   75,   75,   75,   75, -359, -359,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -359, -359, -359

    },

    {
        3, -360, -360, -360, -360, -360, -360, -360, -360, -360,
     -360, -360, -360, -360,   75, -360,   75, -360, -360, -360,
     -360, -360,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -360, -360,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -360, -360, -360
    },

    {
        3, -361, -361, -361, -361, -361, -361, -361, -361, -361,
     -361, -361, -361, -361,   75, -361,   75, -361, -361, -361,

     -361, -361,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,  367,
       75,   75,   75,   75,   75,   75, -361, -361,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -361, -361, -361
    },

    {
        3, -362, -362, -362, -362, -362, -362, -362, -362, -362,
     -362, -362, -362, -362,   75, -362,   75, -362, -362, -362,
     -362, -362,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,  368,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -362, -362,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -362, -362, -362
    },

    {
        3, -363, -363, -363, -363, -363, -363, -363, -363, -363,
     -363, -363, -363, -363,   75, -363,   75, -363, -363, -363,
     -363, -363,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -363, -363,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,  366,   75,   75,   75,
       75,   75, -363, -363, -363
    },

    {
        3, -364, -364, -364, -364, -364, -364, -364, -364, -364,
     -364, -364, -364, -364,   75, -364,   75, -364, -364, -364,
     -364, -364,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -364, -364,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,  367,   75,   75,   75,   75,
       75,   75, -364, -364, -364

    },

    {
        3, -365, -365, -365, -365, -365, -365, -365, -365, -365,
     -365, -365, -365, -365,   75, -365,   75, -365, -365, -365,
     -365, -365,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -365, -365,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,  368,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -365, -365, -365
    },

    {
        3, -366, -366, -366, -366, -366, -366, -366, -366, -366,
     -366, -366, -366, -366,   75, -366,   75, -366, -366, -366,

     -366, -366,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -366, -366,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -366, -366, -366
    },

    {
        3, -367, -367, -367, -367, -367, -367, -367, -367, -367,
     -367, -367, -367, -367,   75, -367,   75, -367, -367, -367,
     -367, -367,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75, -367, -367,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -367, -367, -367
    },

    {
        3, -368, -368, -368, -368, -368, -368, -368, -368, -368,
     -368, -368, -368, -368,   75, -368,   75, -368, -368, -368,
     -368, -368,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75, -368, -368,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75, -368, -368, -368
    },

    } ;

static yy_state_type yy_get_previous_state ( void );
static yy_state_type yy_try_NUL_trans ( yy_state_type current_state  );
static int yy_get_next_buffer ( void );
static void yynoreturn yy_fatal_error ( const char* msg  );

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up yytext.
 */
#define YY_DO_BEFORE_ACTION \
	(yytext_ptr) = yy_bp; \
	yyleng = (yy_size_t) (yy_cp - yy_bp); \
	(yy_hold_char) = *yy_cp; \
	*yy_cp = '\0'; \
	(yy_c_buf_p) = yy_cp;
#define YY_NUM_RULES 76
#define YY_END_OF_BUFFER 77
/* This struct is not used in this scanner,
   but its presence is necessary. */
struct yy_trans_info
	{
	flex_int32_t yy_verify;
	flex_int32_t yy_nxt;
	};
static const flex_int16_t yy_accept[369] =
    {   0,
        0,    0,   77,   75,    1,    1,   75,   75,   20,   75,
        7,    8,   15,   17,   11,    2,   16,   18,   70,    9,
       12,    3,   19,    4,   72,   72,   72,   72,   72,   72,
       72,   72,   72,   72,   72,   72,   72,   72,   72,   72,
       72,   72,   72,   72,    5,    6,   72,   72,   72,   72,
       72,   72,   72,   72,   72,   72,   72,   72,   72,   72,
       72,   72,   72,   72,   72,   13,   10,   14,   74,    0,
       73,    0,    0,   70,   72,   72,   72,   57,   46,   72,
       72,   72,   72,   72,   72,   72,   72,   72,   72,   72,
       72,   31,   72,   63,   72,   72,   72,   72,   72,   72,

       72,   24,   72,   59,   72,   72,   72,   72,   72,   72,
       72,   72,   72,   72,   72,   57,   72,   72,   72,   72,
       72,   72,   72,   72,   72,   72,   72,   72,   72,   72,
       72,   72,   72,   72,   72,   72,   24,   72,   59,   72,
       72,   72,   72,   72,   72,   72,   72,   72,   71,   67,
       72,   58,   55,   72,   72,   72,   72,   72,   72,   72,
       72,   72,   72,   72,   72,   72,   72,   38,   72,   72,
       72,   72,   72,   72,   64,   72,   72,   72,   72,   72,
       72,   72,   72,   51,   72,   72,   72,   72,   72,   72,
       72,   60,   72,   72,   72,   72,   72,   72,   72,   72,

       72,   72,   72,   72,   72,   72,   72,   72,   72,   72,
       72,   72,   72,   72,   72,   72,   72,   72,   72,   72,
       72,   72,   72,   72,   72,   72,   72,   72,   72,   72,
       72,   72,   56,   72,   72,   30,   72,   72,   72,   72,
       72,   69,   72,   72,   72,   72,   37,   72,   72,   65,
       23,   72,   72,   72,   72,   72,   72,   47,   61,   72,
       72,   72,   72,   44,   72,   72,   72,   72,   72,   72,
       72,   72,   72,   72,   72,   72,   72,   72,   72,   72,
       72,   72,   72,   72,   72,   72,   72,   72,   72,   72,
       72,   33,   72,   72,   72,   72,   72,   40,   72,   72,

       72,   62,   26,   72,   72,   48,   22,   36,   72,   45,
       72,   72,   72,   72,   66,   72,   72,   42,   72,   72,
       72,   72,   72,   72,   72,   72,   72,   72,   72,   72,
       72,   72,   72,   72,   72,   72,   25,   49,   50,   72,
       28,   43,   72,   72,   39,   72,   52,   34,   53,   68,
       41,   27,   72,   72,   72,   72,   72,   32,   72,   35,
       72,   72,   72,   72,   72,   54,   29,   21
    } ;

static const YY_CHAR yy_ec[256] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    2,    4,    5,    1,    6,    1,    1,    7,    8,
        9,   10,   11,   12,   13,   14,   15,   16,   16,   16,
       16,   16,   16,   16,   16,   16,   16,   17,   18,   19,
       20,   21,    1,    1,   22,   23,   24,   25,   26,   27,
       28,   29,   30,   31,   32,   33,   34,   35,   36,   37,
       31,   38,   39,   40,   41,   42,   43,   44,   45,   31,
       46,    1,   47,    1,   48,    1,   49,   50,   51,   52,

       53,   54,   55,   56,   57,   31,   58,   59,   60,   61,
       62,   63,   31,   64,   65,   66,   67,   68,   69,   70,
       71,   31,   72,   73,   74,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,

        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1
    } ;

static yy_state_type yy_last_accepting_state;
static char *yy_last_accepting_cpos;

extern int yy_flex_debug;
int yy_flex_debug = 0;

/* The intent behind this definition is that it'll catch
 * any uses of REJECT which flex missed.
 */
#define REJECT reject_used_but_not_detected
#define yymore() yymore_used_but_not_detected
#define YY_MORE_ADJ 0
#define YY_RESTORE_YY_MORE_OFFSET
char *yytext;
#line 1 "cypher.l"
#define YY_NO_INPUT 1
#line 6 "cypher.l"
#include "postgres_fe.h"

#include "psqlscanslash.h"
#include "common/logging.h"
#include "fe_utils/conditional.h"

#include "libpq-fe.h"
#include "cypherscan.h"
#include "cypher.tab.h"
#line 4828 "‘cypher.c’"
#line 4829 "‘cypher.c’"

#define INITIAL 0

#ifndef YY_NO_UNISTD_H
/* Special case for "unistd.h", since it is non-ANSI. We include it way
 * down here because we want the user's section 1 to have been scanned first.
 * The user has a chance to override it with an option.
 */
#include <unistd.h>
#endif

#ifndef YY_EXTRA_TYPE
#define YY_EXTRA_TYPE void *
#endif

static int yy_init_globals ( void );

/* Accessor methods to globals.
   These are made visible to non-reentrant scanners for convenience. */

int yylex_destroy ( void );

int yyget_debug ( void );

void yyset_debug ( int debug_flag  );

YY_EXTRA_TYPE yyget_extra ( void );

void yyset_extra ( YY_EXTRA_TYPE user_defined  );

FILE *yyget_in ( void );

void yyset_in  ( FILE * _in_str  );

FILE *yyget_out ( void );

void yyset_out  ( FILE * _out_str  );

			yy_size_t yyget_leng ( void );

char *yyget_text ( void );

int yyget_lineno ( void );

void yyset_lineno ( int _line_number  );

/* Macros after this point can all be overridden by user definitions in
 * section 1.
 */

#ifndef YY_SKIP_YYWRAP
#ifdef __cplusplus
extern "C" int yywrap ( void );
#else
extern int yywrap ( void );
#endif
#endif

#ifndef YY_NO_UNPUT
    
#endif

#ifndef yytext_ptr
static void yy_flex_strncpy ( char *, const char *, int );
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen ( const char * );
#endif

#ifndef YY_NO_INPUT
#ifdef __cplusplus
static int yyinput ( void );
#else
static int input ( void );
#endif

#endif

/* Amount of stuff to slurp up with each read. */
#ifndef YY_READ_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k */
#define YY_READ_BUF_SIZE 16384
#else
#define YY_READ_BUF_SIZE 8192
#endif /* __ia64__ */
#endif

/* Copy whatever the last rule matched to the standard output. */
#ifndef ECHO
/* This used to be an fputs(), but since the string might contain NUL's,
 * we now use fwrite().
 */
#define ECHO do { if (fwrite( yytext, (size_t) yyleng, 1, yyout )) {} } while (0)
#endif

/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
 * is returned in "result".
 */
#ifndef YY_INPUT
#define YY_INPUT(buf,result,max_size) \
	if ( YY_CURRENT_BUFFER_LVALUE->yy_is_interactive ) \
		{ \
		int c = '*'; \
		yy_size_t n; \
		for ( n = 0; n < max_size && \
			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
			buf[n] = (char) c; \
		if ( c == '\n' ) \
			buf[n++] = (char) c; \
		if ( c == EOF && ferror( yyin ) ) \
			YY_FATAL_ERROR( "input in flex scanner failed" ); \
		result = n; \
		} \
	else \
		{ \
		errno=0; \
		while ( (result = (int) fread(buf, 1, (yy_size_t) max_size, yyin)) == 0 && ferror(yyin)) \
			{ \
			if( errno != EINTR) \
				{ \
				YY_FATAL_ERROR( "input in flex scanner failed" ); \
				break; \
				} \
			errno=0; \
			clearerr(yyin); \
			} \
		}\
\

#endif

/* No semi-colon after return; correct usage is to write "yyterminate();" -
 * we don't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */
#ifndef yyterminate
#define yyterminate() return YY_NULL
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* Report a fatal error. */
#ifndef YY_FATAL_ERROR
#define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
#endif

/* end tables serialization structures and prototypes */

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL_IS_OURS 1

extern int yylex (void);

#define YY_DECL int yylex (void)
#endif /* !YY_DECL */

/* Code executed at the beginning of each rule, after yytext and yyleng
 * have been set up.
 */
#ifndef YY_USER_ACTION
#define YY_USER_ACTION
#endif

/* Code executed at the end of each rule. */
#ifndef YY_BREAK
#define YY_BREAK /*LINTED*/break;
#endif

#define YY_RULE_SETUP \
	YY_USER_ACTION

/** The main scanner function which does all the work.
 */
YY_DECL
{
	yy_state_type yy_current_state;
	char *yy_cp, *yy_bp;
	int yy_act;
    
	if ( !(yy_init) )
		{
		(yy_init) = 1;

#ifdef YY_USER_INIT
		YY_USER_INIT;
#endif

		if ( ! (yy_start) )
			(yy_start) = 1;	/* first start state */

		if ( ! yyin )
			yyin = stdin;

		if ( ! yyout )
			yyout = stdout;

		if ( ! YY_CURRENT_BUFFER ) {
			yyensure_buffer_stack ();
			YY_CURRENT_BUFFER_LVALUE =
				yy_create_buffer( yyin, YY_BUF_SIZE );
		}

		yy_load_buffer_state(  );
		}

	{
#line 17 "cypher.l"

#line 5046 "‘cypher.c’"

	while ( /*CONSTCOND*/1 )		/* loops until end-of-file is reached */
		{
		yy_cp = (yy_c_buf_p);

		/* Support of yytext. */
		*yy_cp = (yy_hold_char);

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

		yy_current_state = (yy_start);
yy_match:
		while ( (yy_current_state = yy_nxt[yy_current_state][ yy_ec[YY_SC_TO_UI(*yy_cp)]  ]) > 0 )
			{
			if ( yy_accept[yy_current_state] )
				{
				(yy_last_accepting_state) = yy_current_state;
				(yy_last_accepting_cpos) = yy_cp;
				}

			++yy_cp;
			}

		yy_current_state = -yy_current_state;

yy_find_action:
		yy_act = yy_accept[yy_current_state];

		YY_DO_BEFORE_ACTION;

do_action:	/* This label is used only to access EOF actions. */

		switch ( yy_act )
	{ /* beginning of action switch */
			case 0: /* must back up */
			/* undo the effects of YY_DO_BEFORE_ACTION */
			*yy_cp = (yy_hold_char);
			yy_cp = (yy_last_accepting_cpos) + 1;
			yy_current_state = (yy_last_accepting_state);
			goto yy_find_action;

case 1:
/* rule 1 can match eol */
YY_RULE_SETUP
#line 18 "cypher.l"
;
	YY_BREAK
case 2:
YY_RULE_SETUP
#line 19 "cypher.l"
{ return DASH; }
	YY_BREAK
case 3:
YY_RULE_SETUP
#line 20 "cypher.l"
{ return LT; }
	YY_BREAK
case 4:
YY_RULE_SETUP
#line 21 "cypher.l"
{ return GT; }
	YY_BREAK
case 5:
YY_RULE_SETUP
#line 22 "cypher.l"
{ return LBRACKET; }
	YY_BREAK
case 6:
YY_RULE_SETUP
#line 23 "cypher.l"
{ return RBRACKET; }
	YY_BREAK
case 7:
YY_RULE_SETUP
#line 24 "cypher.l"
{ return LPAREN; }
	YY_BREAK
case 8:
YY_RULE_SETUP
#line 25 "cypher.l"
{ return RPAREN; }
	YY_BREAK
case 9:
YY_RULE_SETUP
#line 26 "cypher.l"
{ return COLON; }
	YY_BREAK
case 10:
YY_RULE_SETUP
#line 27 "cypher.l"
{ return PIPE; }
	YY_BREAK
case 11:
YY_RULE_SETUP
#line 28 "cypher.l"
{ return COMMA; }
	YY_BREAK
case 12:
YY_RULE_SETUP
#line 29 "cypher.l"
{ return SEMICOLON; }
	YY_BREAK
case 13:
YY_RULE_SETUP
#line 30 "cypher.l"
{ return LBRACE; }
	YY_BREAK
case 14:
YY_RULE_SETUP
#line 31 "cypher.l"
{ return RBRACE; }
	YY_BREAK
case 15:
YY_RULE_SETUP
#line 32 "cypher.l"
{ return ASTERISK; }
	YY_BREAK
case 16:
YY_RULE_SETUP
#line 33 "cypher.l"
{ return DOT; }
	YY_BREAK
case 17:
YY_RULE_SETUP
#line 34 "cypher.l"
{ return PLUS; }
	YY_BREAK
case 18:
YY_RULE_SETUP
#line 35 "cypher.l"
{ return SLASH; }
	YY_BREAK
case 19:
YY_RULE_SETUP
#line 36 "cypher.l"
{ return EQUALS; }
	YY_BREAK
case 20:
YY_RULE_SETUP
#line 37 "cypher.l"
{ return DOLLAR; }
	YY_BREAK
case 21:
YY_RULE_SETUP
#line 39 "cypher.l"
{ return OPTIONAL; }
	YY_BREAK
case 22:
YY_RULE_SETUP
#line 40 "cypher.l"
{ return MATCH; }
	YY_BREAK
case 23:
YY_RULE_SETUP
#line 41 "cypher.l"
{ return ONLY; }
	YY_BREAK
case 24:
YY_RULE_SETUP
#line 42 "cypher.l"
{ return ON; }
	YY_BREAK
case 25:
YY_RULE_SETUP
#line 43 "cypher.l"
{ return CREATE; }
	YY_BREAK
case 26:
YY_RULE_SETUP
#line 44 "cypher.l"
{ return GRAPH; }
	YY_BREAK
case 27:
YY_RULE_SETUP
#line 45 "cypher.l"
{ return VLABEL; }
	YY_BREAK
case 28:
YY_RULE_SETUP
#line 46 "cypher.l"
{ return ELABEL; }
	YY_BREAK
case 29:
YY_RULE_SETUP
#line 47 "cypher.l"
{ return INHERITS; }
	YY_BREAK
case 30:
YY_RULE_SETUP
#line 48 "cypher.l"
{ return DROP; }
	YY_BREAK
case 31:
YY_RULE_SETUP
#line 49 "cypher.l"
{ return IF; }
	YY_BREAK
case 32:
YY_RULE_SETUP
#line 50 "cypher.l"
{ return CASCADE; }
	YY_BREAK
case 33:
YY_RULE_SETUP
#line 51 "cypher.l"
{ return ALTER; }
	YY_BREAK
case 34:
YY_RULE_SETUP
#line 52 "cypher.l"
{ return RENAME; }
	YY_BREAK
case 35:
YY_RULE_SETUP
#line 53 "cypher.l"
{ return EXPLAIN; }
	YY_BREAK
case 36:
YY_RULE_SETUP
#line 54 "cypher.l"
{ return MERGE; }
	YY_BREAK
case 37:
YY_RULE_SETUP
#line 55 "cypher.l"
{ return LOAD; }
	YY_BREAK
case 38:
YY_RULE_SETUP
#line 56 "cypher.l"
{ return IDS; }
	YY_BREAK
case 39:
YY_RULE_SETUP
#line 57 "cypher.l"
{ return LABELS; }
	YY_BREAK
case 40:
YY_RULE_SETUP
#line 58 "cypher.l"
{ return EDGES; }
	YY_BREAK
case 41:
YY_RULE_SETUP
#line 59 "cypher.l"
{ return UNWIND; }
	YY_BREAK
case 42:
YY_RULE_SETUP
#line 60 "cypher.l"
{ return WHERE; }
	YY_BREAK
case 43:
YY_RULE_SETUP
#line 61 "cypher.l"
{ return EXISTS; }
	YY_BREAK
case 44:
YY_RULE_SETUP
#line 62 "cypher.l"
{ return WITH; }
	YY_BREAK
case 45:
YY_RULE_SETUP
#line 63 "cypher.l"
{ return ORDER; }
	YY_BREAK
case 46:
YY_RULE_SETUP
#line 64 "cypher.l"
{ return BY; }
	YY_BREAK
case 47:
YY_RULE_SETUP
#line 65 "cypher.l"
{ return SKIP; }
	YY_BREAK
case 48:
YY_RULE_SETUP
#line 66 "cypher.l"
{ return LIMIT; }
	YY_BREAK
case 49:
YY_RULE_SETUP
#line 67 "cypher.l"
{ return DELETE; }
	YY_BREAK
case 50:
YY_RULE_SETUP
#line 68 "cypher.l"
{ return DETACH; }
	YY_BREAK
case 51:
YY_RULE_SETUP
#line 69 "cypher.l"
{ return SET; }
	YY_BREAK
case 52:
YY_RULE_SETUP
#line 70 "cypher.l"
{ return REMOVE; }
	YY_BREAK
case 53:
YY_RULE_SETUP
#line 71 "cypher.l"
{ return RETURN; }
	YY_BREAK
case 54:
YY_RULE_SETUP
#line 72 "cypher.l"
{ return DISTINCT; }
	YY_BREAK
case 55:
YY_RULE_SETUP
#line 73 "cypher.l"
{ return ASC; }
	YY_BREAK
case 56:
YY_RULE_SETUP
#line 74 "cypher.l"
{ return DESC; }
	YY_BREAK
case 57:
YY_RULE_SETUP
#line 75 "cypher.l"
{ return AS; }
	YY_BREAK
case 58:
YY_RULE_SETUP
#line 76 "cypher.l"
{ return AND; }
	YY_BREAK
case 59:
YY_RULE_SETUP
#line 77 "cypher.l"
{ return OR; }
	YY_BREAK
case 60:
YY_RULE_SETUP
#line 78 "cypher.l"
{ return XOR; }
	YY_BREAK
case 61:
YY_RULE_SETUP
#line 79 "cypher.l"
{ return TRUE; }
	YY_BREAK
case 62:
YY_RULE_SETUP
#line 80 "cypher.l"
{ return FALSE; }
	YY_BREAK
case 63:
YY_RULE_SETUP
#line 81 "cypher.l"
{ return IS; }
	YY_BREAK
case 64:
YY_RULE_SETUP
#line 82 "cypher.l"
{ return NOT; }
	YY_BREAK
case 65:
YY_RULE_SETUP
#line 83 "cypher.l"
{ return NUL; }
	YY_BREAK
case 66:
YY_RULE_SETUP
#line 84 "cypher.l"
{ return UNION; }
	YY_BREAK
case 67:
YY_RULE_SETUP
#line 85 "cypher.l"
{ return ALL; }
	YY_BREAK
case 68:
YY_RULE_SETUP
#line 86 "cypher.l"
{ return SELECT; }
	YY_BREAK
case 69:
YY_RULE_SETUP
#line 87 "cypher.l"
{ return FROM; }
	YY_BREAK
case 70:
YY_RULE_SETUP
#line 89 "cypher.l"
{ yylval.int_val = atoi(yytext); return INTEGER; }
	YY_BREAK
case 71:
YY_RULE_SETUP
#line 90 "cypher.l"
{ yylval.float_val = atof(yytext); return FLOAT; }
	YY_BREAK
case 72:
YY_RULE_SETUP
#line 91 "cypher.l"
{ yylval.str_val = strdup(yytext); return IDENTIFIER; }
	YY_BREAK
case 73:
/* rule 73 can match eol */
YY_RULE_SETUP
#line 92 "cypher.l"
{ yylval.str_val = strdup(yytext); return STRING; }
	YY_BREAK
case 74:
YY_RULE_SETUP
#line 93 "cypher.l"
{ yylval.str_val = strdup(yytext); return COMPARATOR; }
	YY_BREAK
case 75:
YY_RULE_SETUP
#line 94 "cypher.l"
{ return UNKNOWN; }
	YY_BREAK
case 76:
YY_RULE_SETUP
#line 95 "cypher.l"
ECHO;
	YY_BREAK
#line 5473 "‘cypher.c’"
case YY_STATE_EOF(INITIAL):
	yyterminate();

	case YY_END_OF_BUFFER:
		{
		/* Amount of text matched not including the EOB char. */
		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;

		/* Undo the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = (yy_hold_char);
		YY_RESTORE_YY_MORE_OFFSET

		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
			{
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just pointed yyin at a new source and called
			 * yylex().  If so, then we have to assure
			 * consistency between YY_CURRENT_BUFFER and our
			 * globals.  Here is the right place to do so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match for the new input source.
			 */
			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
			}

		/* Note that here we test for yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * already have been incremented past the NUL character
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
			{ /* This was really a NUL. */
			yy_state_type yy_next_state;

			(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state(  );

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and do it
			 * for us because it doesn't know how to deal
			 * with the possibility of jamming (and we don't
			 * want to build jamming into it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state );

			yy_bp = (yytext_ptr) + YY_MORE_ADJ;

			if ( yy_next_state )
				{
				/* Consume the NUL. */
				yy_cp = ++(yy_c_buf_p);
				yy_current_state = yy_next_state;
				goto yy_match;
				}

			else
				{
				yy_cp = (yy_c_buf_p);
				goto yy_find_action;
				}
			}

		else switch ( yy_get_next_buffer(  ) )
			{
			case EOB_ACT_END_OF_FILE:
				{
				(yy_did_buffer_switch_on_eof) = 0;

				if ( yywrap(  ) )
					{
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * yytext, we can now set up
					 * yy_c_buf_p so that if some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we return the
					 * YY_NULL, it'll still work - another
					 * YY_NULL will get returned.
					 */
					(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;

					yy_act = YY_STATE_EOF(YY_START);
					goto do_action;
					}

				else
					{
					if ( ! (yy_did_buffer_switch_on_eof) )
						YY_NEW_FILE;
					}
				break;
				}

			case EOB_ACT_CONTINUE_SCAN:
				(yy_c_buf_p) =
					(yytext_ptr) + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
				goto yy_match;

			case EOB_ACT_LAST_MATCH:
				(yy_c_buf_p) =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
				goto yy_find_action;
			}
		break;
		}

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
	} /* end of user's declarations */
} /* end of yylex */

/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 *	EOB_ACT_END_OF_FILE - end of file
 */
static int yy_get_next_buffer (void)
{
    	char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
	char *source = (yytext_ptr);
	int number_to_move, i;
	int ret_val;

	if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
		YY_FATAL_ERROR(
		"fatal flex scanner internal error--end of buffer missed" );

	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
		{ /* Don't try to fill the buffer, so this is an EOF. */
		if ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
			{
			/* We matched a single character, the EOB, so
			 * treat this as a final EOF.
			 */
			return EOB_ACT_END_OF_FILE;
			}

		else
			{
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			return EOB_ACT_LAST_MATCH;
			}
		}

	/* Try to read more data. */

	/* First move last chars to start of buffer. */
	number_to_move = (int) ((yy_c_buf_p) - (yytext_ptr) - 1);

	for ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
		/* don't do the read, it's not guaranteed to return an EOF,
		 * just force an EOF
		 */
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;

	else
		{
			yy_size_t num_to_read =
			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;

		while ( num_to_read <= 0 )
			{ /* Not enough room in the buffer - grow it. */

			/* just a shorter name for the current buffer */
			YY_BUFFER_STATE b = YY_CURRENT_BUFFER_LVALUE;

			int yy_c_buf_p_offset =
				(int) ((yy_c_buf_p) - b->yy_ch_buf);

			if ( b->yy_is_our_buffer )
				{
				yy_size_t new_size = b->yy_buf_size * 2;

				if ( new_size <= 0 )
					b->yy_buf_size += b->yy_buf_size / 8;
				else
					b->yy_buf_size *= 2;

				b->yy_ch_buf = (char *)
					/* Include room in for 2 EOB chars. */
					yyrealloc( (void *) b->yy_ch_buf,
							 (yy_size_t) (b->yy_buf_size + 2)  );
				}
			else
				/* Can't grow it, we don't own it. */
				b->yy_ch_buf = NULL;

			if ( ! b->yy_ch_buf )
				YY_FATAL_ERROR(
				"fatal error - scanner input buffer overflow" );

			(yy_c_buf_p) = &b->yy_ch_buf[yy_c_buf_p_offset];

			num_to_read = YY_CURRENT_BUFFER_LVALUE->yy_buf_size -
						number_to_move - 1;

			}

		if ( num_to_read > YY_READ_BUF_SIZE )
			num_to_read = YY_READ_BUF_SIZE;

		/* Read in more data. */
		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
			(yy_n_chars), num_to_read );

		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	if ( (yy_n_chars) == 0 )
		{
		if ( number_to_move == YY_MORE_ADJ )
			{
			ret_val = EOB_ACT_END_OF_FILE;
			yyrestart( yyin  );
			}

		else
			{
			ret_val = EOB_ACT_LAST_MATCH;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
				YY_BUFFER_EOF_PENDING;
			}
		}

	else
		ret_val = EOB_ACT_CONTINUE_SCAN;

	if (((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
		/* Extend the array by 50%, plus the number we really need. */
		yy_size_t new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);
		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc(
			(void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf, (yy_size_t) new_size  );
		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
		/* "- 2" to take care of EOB's */
		YY_CURRENT_BUFFER_LVALUE->yy_buf_size = (int) (new_size - 2);
	}

	(yy_n_chars) += number_to_move;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;

	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];

	return ret_val;
}

/* yy_get_previous_state - get the state just before the EOB char was reached */

    static yy_state_type yy_get_previous_state (void)
{
	yy_state_type yy_current_state;
	char *yy_cp;
    
	yy_current_state = (yy_start);

	for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
		{
		yy_current_state = yy_nxt[yy_current_state][(*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1)];
		if ( yy_accept[yy_current_state] )
			{
			(yy_last_accepting_state) = yy_current_state;
			(yy_last_accepting_cpos) = yy_cp;
			}
		}

	return yy_current_state;
}

/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */
    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )
{
	int yy_is_jam;
    	char *yy_cp = (yy_c_buf_p);

	yy_current_state = yy_nxt[yy_current_state][1];
	yy_is_jam = (yy_current_state <= 0);

	if ( ! yy_is_jam )
		{
		if ( yy_accept[yy_current_state] )
			{
			(yy_last_accepting_state) = yy_current_state;
			(yy_last_accepting_cpos) = yy_cp;
			}
		}

		return yy_is_jam ? 0 : yy_current_state;
}

#ifndef YY_NO_UNPUT

#endif

#ifndef YY_NO_INPUT
#ifdef __cplusplus
    static int yyinput (void)
#else
    static int input  (void)
#endif

{
	int c;
    
	*(yy_c_buf_p) = (yy_hold_char);

	if ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )
		{
		/* yy_c_buf_p now points to the character we want to return.
		 * If this occurs *before* the EOB characters, then it's a
		 * valid NUL; if not, then we've hit the end of the buffer.
		 */
		if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
			/* This was really a NUL. */
			*(yy_c_buf_p) = '\0';

		else
			{ /* need more input */
			yy_size_t offset = (yy_c_buf_p) - (yytext_ptr);
			++(yy_c_buf_p);

			switch ( yy_get_next_buffer(  ) )
				{
				case EOB_ACT_LAST_MATCH:
					/* This happens because yy_g_n_b()
					 * sees that we've accumulated a
					 * token and flags that we need to
					 * try matching the token before
					 * proceeding.  But for input(),
					 * there's no matching to consider.
					 * So convert the EOB_ACT_LAST_MATCH
					 * to EOB_ACT_END_OF_FILE.
					 */

					/* Reset buffer status. */
					yyrestart( yyin );

					/*FALLTHROUGH*/

				case EOB_ACT_END_OF_FILE:
					{
					if ( yywrap(  ) )
						return 0;

					if ( ! (yy_did_buffer_switch_on_eof) )
						YY_NEW_FILE;
#ifdef __cplusplus
					return yyinput();
#else
					return input();
#endif
					}

				case EOB_ACT_CONTINUE_SCAN:
					(yy_c_buf_p) = (yytext_ptr) + offset;
					break;
				}
			}
		}

	c = *(unsigned char *) (yy_c_buf_p);	/* cast for 8-bit char's */
	*(yy_c_buf_p) = '\0';	/* preserve yytext */
	(yy_hold_char) = *++(yy_c_buf_p);

	return c;
}
#endif	/* ifndef YY_NO_INPUT */

/** Immediately switch to a different input stream.
 * @param input_file A readable stream.
 * 
 * @note This function does not reset the start condition to @c INITIAL .
 */
    void yyrestart  (FILE * input_file )
{
    
	if ( ! YY_CURRENT_BUFFER ){
        yyensure_buffer_stack ();
		YY_CURRENT_BUFFER_LVALUE =
            yy_create_buffer( yyin, YY_BUF_SIZE );
	}

	yy_init_buffer( YY_CURRENT_BUFFER, input_file );
	yy_load_buffer_state(  );
}

/** Switch to a different input buffer.
 * @param new_buffer The new input buffer.
 * 
 */
    void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )
{
    
	/* TODO. We should be able to replace this entire function body
	 * with
	 *		yypop_buffer_state();
	 *		yypush_buffer_state(new_buffer);
     */
	yyensure_buffer_stack ();
	if ( YY_CURRENT_BUFFER == new_buffer )
		return;

	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*(yy_c_buf_p) = (yy_hold_char);
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	YY_CURRENT_BUFFER_LVALUE = new_buffer;
	yy_load_buffer_state(  );

	/* We don't actually know whether we did this switch during
	 * EOF (yywrap()) processing, but the only time this flag
	 * is looked at is after yywrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	(yy_did_buffer_switch_on_eof) = 1;
}

static void yy_load_buffer_state  (void)
{
    	(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
	(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
	yyin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
	(yy_hold_char) = *(yy_c_buf_p);
}

/** Allocate and initialize an input buffer state.
 * @param file A readable stream.
 * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
 * 
 * @return the allocated buffer state.
 */
    YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )
{
	YY_BUFFER_STATE b;
    
	b = (YY_BUFFER_STATE) yyalloc( sizeof( struct yy_buffer_state )  );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_buf_size = size;

	/* yy_ch_buf has to be 2 characters longer than the size given because
	 * we need to put in 2 end-of-buffer characters.
	 */
	b->yy_ch_buf = (char *) yyalloc( (yy_size_t) (b->yy_buf_size + 2)  );
	if ( ! b->yy_ch_buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_is_our_buffer = 1;

	yy_init_buffer( b, file );

	return b;
}

/** Destroy the buffer.
 * @param b a buffer created with yy_create_buffer()
 * 
 */
    void yy_delete_buffer (YY_BUFFER_STATE  b )
{
    
	if ( ! b )
		return;

	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;

	if ( b->yy_is_our_buffer )
		yyfree( (void *) b->yy_ch_buf  );

	yyfree( (void *) b  );
}

/* Initializes or reinitializes a buffer.
 * This function is sometimes called more than once on the same buffer,
 * such as during a yyrestart() or at EOF.
 */
    static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )

{
	int oerrno = errno;
    
	yy_flush_buffer( b );

	b->yy_input_file = file;
	b->yy_fill_buffer = 1;

    /* If b is the current buffer, then yy_init_buffer was _probably_
     * called from yyrestart() or through yy_get_next_buffer.
     * In that case, we don't want to reset the lineno or column.
     */
    if (b != YY_CURRENT_BUFFER){
        b->yy_bs_lineno = 1;
        b->yy_bs_column = 0;
    }

        b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
    
	errno = oerrno;
}

/** Discard all buffered characters. On the next scan, YY_INPUT will be called.
 * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
 * 
 */
    void yy_flush_buffer (YY_BUFFER_STATE  b )
{
    	if ( ! b )
		return;

	b->yy_n_chars = 0;

	/* We always need two end-of-buffer characters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;

	b->yy_buf_pos = &b->yy_ch_buf[0];

	b->yy_at_bol = 1;
	b->yy_buffer_status = YY_BUFFER_NEW;

	if ( b == YY_CURRENT_BUFFER )
		yy_load_buffer_state(  );
}

/** Pushes the new state onto the stack. The new state becomes
 *  the current state. This function will allocate the stack
 *  if necessary.
 *  @param new_buffer The new state.
 *  
 */
void yypush_buffer_state (YY_BUFFER_STATE new_buffer )
{
    	if (new_buffer == NULL)
		return;

	yyensure_buffer_stack();

	/* This block is copied from yy_switch_to_buffer. */
	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*(yy_c_buf_p) = (yy_hold_char);
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	/* Only push if top exists. Otherwise, replace top. */
	if (YY_CURRENT_BUFFER)
		(yy_buffer_stack_top)++;
	YY_CURRENT_BUFFER_LVALUE = new_buffer;

	/* copied from yy_switch_to_buffer. */
	yy_load_buffer_state(  );
	(yy_did_buffer_switch_on_eof) = 1;
}

/** Removes and deletes the top of the stack, if present.
 *  The next element becomes the new top.
 *  
 */
void yypop_buffer_state (void)
{
    	if (!YY_CURRENT_BUFFER)
		return;

	yy_delete_buffer(YY_CURRENT_BUFFER );
	YY_CURRENT_BUFFER_LVALUE = NULL;
	if ((yy_buffer_stack_top) > 0)
		--(yy_buffer_stack_top);

	if (YY_CURRENT_BUFFER) {
		yy_load_buffer_state(  );
		(yy_did_buffer_switch_on_eof) = 1;
	}
}

/* Allocates the stack if it does not exist.
 *  Guarantees space for at least one push.
 */
static void yyensure_buffer_stack (void)
{
	yy_size_t num_to_alloc;
    
	if (!(yy_buffer_stack)) {

		/* First allocation is just for 2 elements, since we don't know if this
		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
		 * immediate realloc on the next call.
         */
      num_to_alloc = 1; /* After all that talk, this was set to 1 anyways... */
		(yy_buffer_stack) = (struct yy_buffer_state**)yyalloc
								(num_to_alloc * sizeof(struct yy_buffer_state*)
								);
		if ( ! (yy_buffer_stack) )
			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );

		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));

		(yy_buffer_stack_max) = num_to_alloc;
		(yy_buffer_stack_top) = 0;
		return;
	}

	if ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){

		/* Increase the buffer to prepare for a possible push. */
		yy_size_t grow_size = 8 /* arbitrary grow size */;

		num_to_alloc = (yy_buffer_stack_max) + grow_size;
		(yy_buffer_stack) = (struct yy_buffer_state**)yyrealloc
								((yy_buffer_stack),
								num_to_alloc * sizeof(struct yy_buffer_state*)
								);
		if ( ! (yy_buffer_stack) )
			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );

		/* zero only the new slots.*/
		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
		(yy_buffer_stack_max) = num_to_alloc;
	}
}

/** Setup the input buffer state to scan directly from a user-specified character buffer.
 * @param base the character buffer
 * @param size the size in bytes of the character buffer
 * 
 * @return the newly allocated buffer state object.
 */
YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )
{
	YY_BUFFER_STATE b;
    
	if ( size < 2 ||
	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
	     base[size-1] != YY_END_OF_BUFFER_CHAR )
		/* They forgot to leave room for the EOB's. */
		return NULL;

	b = (YY_BUFFER_STATE) yyalloc( sizeof( struct yy_buffer_state )  );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );

	b->yy_buf_size = (int) (size - 2);	/* "- 2" to take care of EOB's */
	b->yy_buf_pos = b->yy_ch_buf = base;
	b->yy_is_our_buffer = 0;
	b->yy_input_file = NULL;
	b->yy_n_chars = b->yy_buf_size;
	b->yy_is_interactive = 0;
	b->yy_at_bol = 1;
	b->yy_fill_buffer = 0;
	b->yy_buffer_status = YY_BUFFER_NEW;

	yy_switch_to_buffer( b  );

	return b;
}

/** Setup the input buffer state to scan a string. The next call to yylex() will
 * scan from a @e copy of @a str.
 * @param yystr a NUL-terminated string to scan
 * 
 * @return the newly allocated buffer state object.
 * @note If you want to scan bytes that may contain NUL values, then use
 *       yy_scan_bytes() instead.
 */
YY_BUFFER_STATE yy_scan_string (const char * yystr )
{
    
	return yy_scan_bytes( yystr, (int) strlen(yystr) );
}

/** Setup the input buffer state to scan the given bytes. The next call to yylex() will
 * scan from a @e copy of @a bytes.
 * @param yybytes the byte buffer to scan
 * @param _yybytes_len the number of bytes in the buffer pointed to by @a bytes.
 * 
 * @return the newly allocated buffer state object.
 */
YY_BUFFER_STATE yy_scan_bytes  (const char * yybytes, yy_size_t  _yybytes_len )
{
	YY_BUFFER_STATE b;
	char *buf;
	yy_size_t n;
	yy_size_t i;
    
	/* Get memory for full buffer, including space for trailing EOB's. */
	n = (yy_size_t) (_yybytes_len + 2);
	buf = (char *) yyalloc( n  );
	if ( ! buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );

	for ( i = 0; i < _yybytes_len; ++i )
		buf[i] = yybytes[i];

	buf[_yybytes_len] = buf[_yybytes_len+1] = YY_END_OF_BUFFER_CHAR;

	b = yy_scan_buffer( buf, n );
	if ( ! b )
		YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );

	/* It's okay to grow etc. this buffer, and we should throw it
	 * away when we're done.
	 */
	b->yy_is_our_buffer = 1;

	return b;
}

#ifndef YY_EXIT_FAILURE
#define YY_EXIT_FAILURE 2
#endif

static void yynoreturn yy_fatal_error (const char* msg )
{
			fprintf( stderr, "%s\n", msg );
	exit( YY_EXIT_FAILURE );
}

/* Redefine yyless() so it works in section 3 code. */

#undef yyless
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        yy_size_t yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		yytext[yyleng] = (yy_hold_char); \
		(yy_c_buf_p) = yytext + yyless_macro_arg; \
		(yy_hold_char) = *(yy_c_buf_p); \
		*(yy_c_buf_p) = '\0'; \
		yyleng = yyless_macro_arg; \
		} \
	while ( 0 )

/* Accessor  methods (get/set functions) to struct members. */

/** Get the current line number.
 * 
 */
int yyget_lineno  (void)
{
    
    return yylineno;
}

/** Get the input stream.
 * 
 */
FILE *yyget_in  (void)
{
        return yyin;
}

/** Get the output stream.
 * 
 */
FILE *yyget_out  (void)
{
        return yyout;
}

/** Get the length of the current token.
 * 
 */
yy_size_t yyget_leng  (void)
{
        return yyleng;
}

/** Get the current token.
 * 
 */

char *yyget_text  (void)
{
        return yytext;
}

/** Set the current line number.
 * @param _line_number line number
 * 
 */
void yyset_lineno (int  _line_number )
{
    
    yylineno = _line_number;
}

/** Set the input stream. This does not discard the current
 * input buffer.
 * @param _in_str A readable stream.
 * 
 * @see yy_switch_to_buffer
 */
void yyset_in (FILE *  _in_str )
{
        yyin = _in_str ;
}

void yyset_out (FILE *  _out_str )
{
        yyout = _out_str ;
}

int yyget_debug  (void)
{
        return yy_flex_debug;
}

void yyset_debug (int  _bdebug )
{
        yy_flex_debug = _bdebug ;
}

static int yy_init_globals (void)
{
        /* Initialization is the same as for the non-reentrant scanner.
     * This function is called from yylex_destroy(), so don't allocate here.
     */

    (yy_buffer_stack) = NULL;
    (yy_buffer_stack_top) = 0;
    (yy_buffer_stack_max) = 0;
    (yy_c_buf_p) = NULL;
    (yy_init) = 0;
    (yy_start) = 0;

/* Defined in main.c */
#ifdef YY_STDINIT
    yyin = stdin;
    yyout = stdout;
#else
    yyin = NULL;
    yyout = NULL;
#endif

    /* For future reference: Set errno on error, since we are called by
     * yylex_init()
     */
    return 0;
}

/* yylex_destroy is for both reentrant and non-reentrant scanners. */
int yylex_destroy  (void)
{
    
    /* Pop the buffer stack, destroying each element. */
	while(YY_CURRENT_BUFFER){
		yy_delete_buffer( YY_CURRENT_BUFFER  );
		YY_CURRENT_BUFFER_LVALUE = NULL;
		yypop_buffer_state();
	}

	/* Destroy the stack itself. */
	yyfree((yy_buffer_stack) );
	(yy_buffer_stack) = NULL;

    /* Reset the globals. This is important in a non-reentrant scanner so the next time
     * yylex() is called, initialization will occur. */
    yy_init_globals( );

    return 0;
}

/*
 * Internal utility routines.
 */

#ifndef yytext_ptr
static void yy_flex_strncpy (char* s1, const char * s2, int n )
{
		
	int i;
	for ( i = 0; i < n; ++i )
		s1[i] = s2[i];
}
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (const char * s )
{
	int n;
	for ( n = 0; s[n]; ++n )
		;

	return n;
}
#endif

void *yyalloc (yy_size_t  size )
{
			return malloc(size);
}

void *yyrealloc  (void * ptr, yy_size_t  size )
{
		
	/* The cast to (char *) in the following accommodates both
	 * implementations that use char* generic pointers, and those
	 * that use void* generic pointers.  It works with the latter
	 * because both ANSI C and C++ allow castless assignment from
	 * any pointer type to void*, and deal with argument conversions
	 * as though doing an assignment.
	 */
	return realloc(ptr, size);
}

void yyfree (void * ptr )
{
			free( (char *) ptr );	/* see yyrealloc() for (char *) cast */
}

#define YYTABLES_NAME "yytables"

#line 95 "cypher.l"



